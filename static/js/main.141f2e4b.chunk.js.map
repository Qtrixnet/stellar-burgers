{"version":3,"sources":["components/app/app.module.css","components/modal-switch/modal-switch.module.css","components/order-history/order-history.module.css","components/chosen-ingredient/chosen-ingredient.module.css","components/main/main.module.css","components/modal-overlay/modal-overlay.module.css","pages/feed/feed.module.css","components/order-full-info/order-full-info.module.css","components/header/header.module.css","pages/profile/profile.module.css","components/header/header.tsx","components/loader/loader.tsx","utils/Api.ts","utils/constants.ts","services/actions/ingredients.ts","services/actions/user.ts","services/hooks/hooks.ts","pages/login/login.tsx","pages/register/register.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/profile-form/profile-form.tsx","components/order-component/order-component.tsx","services/actions/orders.ts","components/order-history/order-history.tsx","pages/profile/profile.tsx","pages/not-found/not-found.tsx","components/protected-route/protected-route.tsx","services/actions/popup.ts","services/actions/order.ts","utils/get-coords.ts","components/ingredient/ingredient.tsx","components/burger-ingredients/burger-ingredients.tsx","utils/compare-coords.ts","components/chosen-ingredient/chosen-ingredient.tsx","components/burger-constructor/burger-constructor.tsx","components/main/main.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/done.gif","components/order-details/order-details.tsx","components/ingredient-details/ingredient-details.tsx","components/orders-list/orders-list.tsx","components/orders-info/orders-info.tsx","pages/feed/feed.tsx","components/order-full-info/order-full-info.tsx","components/modal-switch/modal-switch.tsx","components/app/app.tsx","services/reducers/ingredients.ts","services/reducers/order.ts","services/reducers/popup.ts","services/reducers/user.ts","services/reducers/orders.ts","services/reducers/index.ts","services/middleware/socketMiddleware.ts","services/store.ts","index.tsx","components/order-component/order-component.module.css","components/ingredient/ingredient.module.css","components/orders-info/orders-info.module.css","components/ingredient-details/ingredient-details.module.css","components/burger-ingredients/burger-ingredients.module.css","pages/login/login.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","components/burger-constructor/burger-constructor.module.css","components/modal/modal.module.css","components/order-details/order-details.module.css","components/orders-list/orders-list.module.css","components/loader/loader.module.css","components/profile-form/profile-form.module.css","pages/not-found/not-found.module.css"],"names":["module","exports","Header","className","headerStyles","header","headerContainer","list","activeClassName","link_active","link","exact","to","type","logo","profile","Loader","loaderStyles","loader_container","loader","Api","data","_baseUrl","this","res","ok","json","Promise","reject","fetch","then","_requestResult","ingredientsIds","token","method","headers","body","JSON","stringify","ingredients","order_number","email","passwordValue","codeValue","password","name","refreshToken","mainApi","GET_INGREDIENTS","GET_INGREDIENTS_FAILED","GET_INGREDIENTS_SUCCESS","SELECT_INGREDIENT","DELETE_SELECTED_INGREDIENT","ADD_INGREDIENT","DELETE_INGREDIENT","DELETE_ALL_INGREDIENTS","SORT_INGREDIENTS","addIngredient","newIngredientsArray","modifiedArray","map","ingredientObject","ingredientCopy","Object","assign","uuid","generateUniqueId","payload","REGISTRATION","REGISTRATION_SUCCESS","REGISTRATION_FAILED","LOGIN","LOGIN_SUCCESS","LOGIN_FAILED","FORGOT_PASSWORD","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILED","RESET_PASSWORD","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","GET_USER_DATA","GET_USER_DATA_SUCCESS","GET_USER_DATA_FAILED","SEND_USER_DATA","SEND_USER_DATA_SUCCESS","SEND_USER_DATA_FAILED","LOGOUT","LOGOUT_SUCCESS","LOGOUT_FAILED","REFRESH_TOKEN","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAILED","SET_FORGOT_PASSWORD_STATE","setLoginLoadingFailed","setForgotPasswordState","state","registration","dispatch","register","accessToken","localStorage","setItem","catch","err","console","log","login","getUserData","userData","user","status","statusText","getItem","sendUserData","forgotPassword","sendEmail","resetPassword","code","logout","removeItem","useSelector","selectorHook","useDispatch","dispatchHook","Login","useState","emailValue","setEmailValue","setPasswordValue","inputRef","useRef","history","useHistory","location","useLocation","useEffect","previousLocation","push","pathname","LoginStyles","wrapper","onSubmit","e","preventDefault","form","title","placeholder","onChange","target","value","error","ref","errorText","size","Register","nameValue","setNameValue","RegisterStyles","ForgotPassword","ForgotPasswordStyles","evt","ResetPassword","setCodeValue","isPasswordForgot","ResetPasswordStyles","ProfileForm","loginValue","setLoginValue","isDataChanged","setIsDataChanged","nameInputRef","emailInputRef","passwordInputRef","ProfileFormStyles","icon","onIconClick","current","focus","buttons_container","onClick","OrderComponent","str","order","isHistory","number","createdAt","orderIngredients","ingredientsData","orderComponentStyles","background","Date","toLocaleString","checkStatus","footer","ingredients_list","ingredient","idx","foundIngredient","find","_id","findIngredient","style","zIndex","ingredients_list_item","ingredients_list_item_image","src","image","alt","last_ingredient","last_ingredient_image","overlay","last_ingredient_count","length","total","sum","forEach","orderIngredient","price","calculateSum","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_ALL_ORDERS","WS_USER_ORDERS_CONNECTION_START","WS_USER_ORDERS_CONNECTION_SUCCESS","WS_USER_ORDERS_CONNECTION_ERROR","WS_USER_ORDERS_CONNECTION_CLOSED","WS_GET_USER_ORDERS","GET_ORDER_INFO","GET_ORDER_INFO_SUCCESS","GET_ORDER_INFO_FAILED","CLEAN_ORDER_INFO","getOrderInfo","orderNumber","getOrderInfoLoadingSuccess","orders","OrderHistory","userOrders","ordersData","orderHistoryStyles","Profile","useRouteMatch","path","url","ProfileStyles","navigation","list_item","text","NotFound","NotFoundStyles","ProtectedRoute","children","rest","render","CHANGE_ORDER_DETAILS_POPUP_STATE","CHANGE_INGREDIENTS_POPUP_STATE","CHANGE_ORDER_POPUP_STATE","changeOrderDetailsPopupState","changeIngredientsPopupState","GET_ORDER_DATA","GET_ORDER_DATA_FAILED","GET_ORDER_DATA_SUCCESS","DELETE_ORDER_DATA","getOrderData","sendIngredients","setOrderDataLoadingSuccess","getCoords","elem","box","getBoundingClientRect","top","Math","round","scrollY","left","scrollX","Ingredient","isDisabled","setIsDisabled","chosenIngredients","initialIngredients","useDrag","item","collect","monitor","isDrag","isDragging","dragRef","ingredientCounter","some","onContextMenu","targetIngredient","currentTarget","dataset","id","selectedBun","selectedBunIndex","indexOf","chosenIngredientsClone","slice","splice","selectIngredient","ingredientStyles","moving","list_item_disabled","price_info","count","hint_icons","left_click_icon","right_click_icon","drag_icon","BurgerIngredients","setCurrent","handleTabClick","document","querySelector","scrollIntoView","block","behavior","burgerIngredientsStyle","main_container","display","active","onScroll","addEventListener","bunTitleTopCoords","sauceTitleTopCoords","mainTitleTopCoords","mainContainerTopCoords","absoluteCoords","abs","coordsValues","coord","minValue","min","compareCoords","ingredients_container","ChosenIngredient","moveIngredient","index","useDrop","accept","handlerId","getHandlerId","drop","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","bottom","hoverClientY","getClientOffset","y","opacity","drag","chosenIngredientStyle","thumbnail","handleClose","selectedIngredientIndex","BurgerConstructor","onDropHandler","totalSum","useMemo","reduce","acc","cur","ingredientId","isHover","isOver","burgerIngredientsContainer","useCallback","ingredientWithTypeBan","filter","ingredientsWithoutBan","sortedIngredients","update","$splice","sortedInregientsWithBun","borderColor","bunElementHandler","property","trueValue","falseValue","DndProvider","backend","HTML5Backend","burgerConstructorStyle","constructor_container","constructor_element","isLocked","button_container","Main","mainStyles","ModalOverlay","handlePopupClose","modalOverlayStyles","Modal","modalRoot","getElementById","handleEscapeClose","key","removeEventListener","createPortal","modalStyles","container","closeButton","OrderDetails","orderData","orderDetails","orderDetailsStyles","doneGif","success","IngredientDetails","useParams","selectedIngredient","ingredientDetailsStyles","width","height","listItem","calories","proteins","fat","carbohydrates","OrderSList","orderListStyles","orders_container","OrdersInfo","totalToday","orderInfoStyles","order_numbers","ready","numbers_container","list_accent","atWork","all_time","digits","Feed","feedStyles","OrderFullInfo","isPopup","orderInfo","allIngredients","foundIngredients","OrderFullInfoStyles","marginTop","order_info","order_status","color","Array","from","Set","item_currency","filteredIngredient","item_currency_container","currency_container","orderedIngredient","ModalSwitch","isOrderDetailsPopupOpen","popupState","handleOrderPopupClose","goBack","modalSwitchStyles","App","ingredientsRequest","getIngredients","appStyles","app","initialState","ingredientsFailed","orderRequest","orderFailed","isIngredientsPopupOpen","isOrderPopupOpen","registrationRequest","registrationRequestFailed","loginRequest","loginRequestFailed","forgotPasswordRequest","forgotPasswordRequestFailed","resetPasswordRequest","resetPasswordRequestFailed","getUserDataRequest","getUserDataRequestFailed","logoutRequest","logoutRequestFailed","refreshTokenRequest","refreshTokenRequestFailed","sendUserDataRequest","sendUserDataRequestFailed","wsAllOrders","wsUserOrders","orderInfoRequest","orderInfoFailed","rootReducer","combineReducers","action","allOrdersError","undefined","userOrdersError","socketMiddleware","wsUrl","wsActions","store","socket","next","getState","wsInit","onOpen","onClose","onError","onMessage","WebSocket","replace","close","onopen","event","onerror","onmessage","parsedData","parse","restParsedData","onclose","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","wsAllOrdersActions","wsUserOrdersActions","enhancer","applyMiddleware","thunk","createStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.141f2e4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3noti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modal-switch_container__3grEQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"order-history_list__2ikFk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_item\":\"chosen-ingredient_list_item__3RzN9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"main_main_container__1zuyq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__1md7D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed_container__2NFcW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-full-info_container__ai2h5\",\"order_info\":\"order-full-info_order_info__2rPZx\",\"order_number\":\"order-full-info_order_number__6Ylrw\",\"currency_container\":\"order-full-info_currency_container__23gSH\",\"footer\":\"order-full-info_footer__3UdMe\",\"list\":\"order-full-info_list__3sR2c\",\"list_item\":\"order-full-info_list_item__2ivpk\",\"image\":\"order-full-info_image__2SZqs\",\"item_currency\":\"order-full-info_item_currency__3V84M\",\"item_currency_container\":\"order-full-info_item_currency_container__2U7E2\",\"title\":\"order-full-info_title__3ers3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__27L1B\",\"headerContainer\":\"header_headerContainer__26DlA\",\"profile\":\"header_profile__2w4BF\",\"logo\":\"header_logo__3lDef\",\"link\":\"header_link__1PNTA\",\"link_active\":\"header_link_active__28w-7\",\"list\":\"header_list__3_CLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"profile_wrapper__1YK4i\",\"navigation\":\"profile_navigation__1ClGi\",\"list\":\"profile_list__1EAKb\",\"link\":\"profile_link__2lCE4\",\"link_active\":\"profile_link_active__1oZlR\",\"text\":\"profile_text__1s3NM\"};","import {NavLink} from 'react-router-dom';\r\nimport {Logo, BurgerIcon, ListIcon, ProfileIcon} from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport headerStyles from './header.module.css';\r\nimport {FC} from 'react';\r\n\r\nconst Header: FC = () => {\r\n\r\n  return (\r\n    <header className={`${headerStyles.header} text text_type_main-default pt-4 pb-4`}>\r\n      <div className={headerStyles.headerContainer}>\r\n        <nav>\r\n          <ul className={headerStyles.list}>\r\n            <li>\r\n              <NavLink activeClassName={headerStyles.link_active} className={`pt-5 pr-5 pb-5 ${headerStyles.link}`}\r\n                       exact to=\"/\">\r\n                <BurgerIcon type=\"secondary\"/>\r\n                <span className={`ml-2`}>Конструктор</span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeClassName={headerStyles.link_active} className={`p-5 ${headerStyles.link}`} exact\r\n                       to=\"/feed\">\r\n                <ListIcon type=\"secondary\"/>\r\n                <span className={`ml-2`}>Лента заказов</span>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className={headerStyles.logo}>\r\n          <NavLink exact to=\"/\">\r\n            <Logo/>\r\n          </NavLink>\r\n        </div>\r\n        <NavLink activeClassName={headerStyles.link_active}\r\n                 className={`p-5 ${headerStyles.link} ${headerStyles.profile}`} to=\"/profile\">\r\n          <ProfileIcon type=\"secondary\"/>\r\n          <span className={`ml-2`}>Личный кабинет</span>\r\n        </NavLink>\r\n      </div>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default Header;\r\n","import loaderStyles from \"./loader.module.css\";\r\nimport {FC} from 'react';\r\n\r\nconst Loader:FC = () => (\r\n  <div className={loaderStyles.loader_container}>\r\n    <div className={loaderStyles.loader}></div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import {BASE_URL} from './constants';\r\nimport {TIngredientId} from \"../services/types/types\";\r\n\r\n//* Класс для взаимодействия с сервером\r\nclass Api {\r\n  private _baseUrl: string;\r\n\r\n  constructor(data: string) {\r\n    this._baseUrl = data;\r\n  }\r\n\r\n  //* Проверка статуса запроса\r\n  _requestResult(res: Response) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(res)\r\n    }\r\n  }\r\n\r\n  //* Запрос ингредиентов\r\n  getIngredients() {\r\n    return fetch(`${this._baseUrl}/ingredients`).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Отправка данных заказа\r\n  sendIngredients(ingredientsIds: TIngredientId[], token: string) {\r\n    return fetch(`${this._baseUrl}/orders`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8',\r\n        \"Authorization\": token,\r\n      },\r\n      body: JSON.stringify({\r\n        ingredients: ingredientsIds,\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос данных заказа\r\n  getOrderInfo(order_number: number) {\r\n    return fetch(`${this._baseUrl}/orders/${order_number}`).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос на восстановление пароля\r\n  sendEmail(email: string) {\r\n    return fetch(`${this._baseUrl}/password-reset`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос на обновление пароля\r\n  resetPassword(passwordValue: string, codeValue: string) {\r\n    return fetch(`${this._baseUrl}/password-reset/reset`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        password: passwordValue,\r\n        token: codeValue,\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос на авторизацию\r\n  login(email: string, password: string) {\r\n    return fetch(`${this._baseUrl}/auth/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос на регистрацию\r\n  register(email: string, name: string, password: string) {\r\n    return fetch(`${this._baseUrl}/auth/register`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n        name,\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос данных пользователя\r\n  getUserData(token: string) {\r\n    return fetch(`${this._baseUrl}/auth/user`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n        \"authorization\": token,\r\n      },\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос на редактирвоание данных пользователя\r\n  sendUserData(token: string, name: string, email: string, password: string) {\r\n    return fetch(`${this._baseUrl}/auth/user`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n        \"authorization\": token\r\n      },\r\n      body: JSON.stringify({\r\n        \"email\": email,\r\n        \"name\": name,\r\n        \"password\": password\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос для обновления токена\r\n  refreshToken(refreshToken: string) {\r\n    return fetch(`${this._baseUrl}/auth/token`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        \"token\": refreshToken\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  //* Запрос на выход из системы\r\n  logout(refreshToken: string | null) {\r\n    return fetch(`${this._baseUrl}/auth/logout`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        \"token\": refreshToken\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n}\r\n\r\nconst mainApi = new Api(BASE_URL);\r\n\r\nexport default mainApi;\r\n","export const BASE_URL = 'https://norma.nomoreparties.space/api';\r\nexport const ALL_ORDERS_URL = 'wss:/norma.nomoreparties.space/orders/all';\r\nexport const USER_ORDERS_URL = 'wss://norma.nomoreparties.space/orders'\r\nexport const tokenExpiredError = 403;\r\nexport const unauthorizedError = 401;\r\n","import mainApi from \"../../utils/Api\";\r\n// @ts-ignore\r\nimport {v4 as generateUniqueId} from \"uuid\";\r\nimport {AppDispatch, AppThunk, IIngredient} from \"../types/types\";\r\n\r\nexport const GET_INGREDIENTS: 'GET_INGREDIENTS' = \"GET_INGREDIENTS\";\r\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_FAILED' = \"GET_INGREDIENTS_FAILED\";\r\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = \"GET_INGREDIENTS_SUCCESS\";\r\n\r\nexport const SELECT_INGREDIENT: 'SELECT_INGREDIENT' = \"SELECT_INGREDIENT\";\r\nexport const DELETE_SELECTED_INGREDIENT: 'DELETE_SELECTED_INGREDIENT' = \"DELETE_SELECTED_INGREDIENT\";\r\n\r\nexport const ADD_INGREDIENT: 'ADD_INGREDIENT' = \"ADD_INGREDIENT\";\r\nexport const DELETE_INGREDIENT: 'DELETE_INGREDIENT' = \"DELETE_INGREDIENT\";\r\nexport const DELETE_ALL_INGREDIENTS: 'DELETE_ALL_INGREDIENTS' = \"DELETE_ALL_INGREDIENTS\";\r\n\r\nexport const SORT_INGREDIENTS: 'SORT_INGREDIENTS' = \"SORT_INGREDIENTS\";\r\n\r\nexport interface ISelectIngredient {\r\n  readonly type: typeof SELECT_INGREDIENT;\r\n  readonly payload: IIngredient;\r\n}\r\n\r\nexport interface IDeleteSelectedIngredient {\r\n  readonly type: typeof DELETE_SELECTED_INGREDIENT;\r\n}\r\n\r\nexport interface IAddIngredient {\r\n  readonly type: typeof ADD_INGREDIENT;\r\n  readonly payload: IIngredient[];\r\n}\r\n\r\nexport interface IDeleteIngredient {\r\n  readonly type: typeof DELETE_INGREDIENT;\r\n  readonly payload: IIngredient[];\r\n}\r\n\r\nexport interface IDeleteAllIngredients {\r\n  readonly type: typeof DELETE_ALL_INGREDIENTS;\r\n}\r\n\r\nexport interface ISortIngredients {\r\n  readonly type: typeof SORT_INGREDIENTS;\r\n  readonly payload: IIngredient[];\r\n}\r\n\r\nexport const getIngredients: AppThunk = () => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_INGREDIENTS,\r\n    });\r\n\r\n    mainApi\r\n      .getIngredients()\r\n      .then((ingredientsData) => {\r\n        if (ingredientsData) {\r\n          dispatch({\r\n            type: GET_INGREDIENTS_SUCCESS,\r\n            payload: ingredientsData.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(() =>\r\n        dispatch({\r\n          type: GET_INGREDIENTS_FAILED,\r\n        })\r\n      );\r\n  };\r\n}\r\n\r\nexport const selectIngredient = (ingredient: IIngredient) => ({\r\n  type: SELECT_INGREDIENT,\r\n  payload: ingredient,\r\n});\r\n\r\nexport const deleteSelectedIngredient = () => ({\r\n  type: DELETE_SELECTED_INGREDIENT,\r\n});\r\n\r\nexport const addIngredient = (newIngredientsArray: IIngredient[]) => {\r\n  const modifiedArray = newIngredientsArray.map((ingredientObject) => {\r\n    const ingredientCopy = Object.assign({}, ingredientObject);\r\n    ingredientCopy.uuid = generateUniqueId();\r\n    return ingredientCopy;\r\n  });\r\n\r\n  return {type: ADD_INGREDIENT, payload: modifiedArray};\r\n};\r\n\r\nexport const deleteIngredient = (newIngredientsArray: IIngredient[]) => ({\r\n  type: DELETE_INGREDIENT,\r\n  payload: newIngredientsArray,\r\n});\r\n\r\nexport const deleteAllIngredients = () => ({type: DELETE_ALL_INGREDIENTS});\r\n\r\nexport const sortIngredients = (newIngredientsArray: IIngredient[]) => ({\r\n  type: SORT_INGREDIENTS,\r\n  payload: newIngredientsArray,\r\n});\r\n","import mainApi from '../../utils/Api';\r\nimport {tokenExpiredError, unauthorizedError} from '../../utils/constants';\r\nimport {AppDispatch, AppThunk, IUser} from \"../types/types\";\r\n\r\nexport const REGISTRATION: 'REGISTRATION' = 'REGISTRATION';\r\nexport const REGISTRATION_SUCCESS: 'REGISTRATION_SUCCESS' = 'REGISTRATION_SUCCESS';\r\nexport const REGISTRATION_FAILED: 'REGISTRATION_FAILED' = 'REGISTRATION_FAILED';\r\n\r\nexport const LOGIN: 'LOGIN' = 'LOGIN';\r\nexport const LOGIN_SUCCESS: 'LOGIN_SUCCESS' = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED: 'LOGIN_FAILED' = 'LOGIN_FAILED';\r\n\r\nexport const FORGOT_PASSWORD: 'FORGOT_PASSWORD' = 'FORGOT_PASSWORD';\r\nexport const FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS' = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAILED: 'FORGOT_PASSWORD_FAILED' = 'FORGOT_PASSWORD_FAILED';\r\n\r\nexport const RESET_PASSWORD: 'RESET_PASSWORD' = 'RESET_PASSWORD';\r\nexport const RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAILED: 'RESET_PASSWORD_FAILED' = 'RESET_PASSWORD_FAILED';\r\n\r\nexport const GET_USER_DATA: 'GET_USER_DATA' = 'GET_USER_DATA';\r\nexport const GET_USER_DATA_SUCCESS: 'GET_USER_DATA_SUCCESS' = 'GET_USER_DATA_SUCCESS';\r\nexport const GET_USER_DATA_FAILED: 'GET_USER_DATA_FAILED' = 'GET_USER_DATA_FAILED';\r\n\r\nexport const SEND_USER_DATA: 'SEND_USER_DATA' = 'SEND_USER_DATA';\r\nexport const SEND_USER_DATA_SUCCESS: 'SEND_USER_DATA_SUCCESS' = 'SEND_USER_DATA_SUCCESS';\r\nexport const SEND_USER_DATA_FAILED: 'SEND_USER_DATA_FAILED' = 'SEND_USER_DATA_FAILED';\r\n\r\nexport const LOGOUT: 'LOGOUT' = 'LOGOUT';\r\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILED: 'LOGOUT_FAILED' = 'LOGOUT_FAILED';\r\n\r\nexport const REFRESH_TOKEN: 'REFRESH_TOKEN' = 'REFRESH_TOKEN';\r\nexport const REFRESH_TOKEN_SUCCESS: 'REFRESH_TOKEN_SUCCESS' = 'REFRESH_TOKEN_SUCCESS';\r\nexport const REFRESH_TOKEN_FAILED: 'REFRESH_TOKEN_FAILED' = 'REFRESH_TOKEN_FAILED';\r\n\r\nexport const SET_FORGOT_PASSWORD_STATE: 'SET_FORGOT_PASSWORD_STATE' = 'SET_FORGOT_PASSWORD_STATE';\r\n\r\nexport interface ISetRegistrationLoading {\r\n  readonly type: typeof REGISTRATION;\r\n}\r\n\r\nexport interface ISetRegistrationLoadingSuccess {\r\n  readonly type: typeof REGISTRATION_SUCCESS;\r\n  payload: string;\r\n}\r\n\r\nexport interface ISetRegistrationLoadingFailed {\r\n  readonly type: typeof REGISTRATION_FAILED;\r\n}\r\n\r\nexport interface ISetLoginLoading {\r\n  readonly type: typeof LOGIN;\r\n}\r\n\r\nexport interface ISetLoginLoadingSuccess {\r\n  readonly type: typeof LOGIN_SUCCESS;\r\n  payload: string;\r\n}\r\n\r\nexport interface ISetLoginLoadingFailed {\r\n  readonly type: typeof LOGIN_FAILED;\r\n  payload: string;\r\n}\r\n\r\nexport interface ISetForgotPasswordLoading {\r\n  readonly type: typeof FORGOT_PASSWORD;\r\n}\r\n\r\nexport interface ISetForgotPasswordLoadingSuccess {\r\n  readonly type: typeof FORGOT_PASSWORD_SUCCESS;\r\n}\r\n\r\nexport interface ISetForgotPasswordLoadingFailed {\r\n  readonly type: typeof FORGOT_PASSWORD_FAILED;\r\n}\r\n\r\nexport interface ISetResetPasswordLoading {\r\n  readonly type: typeof RESET_PASSWORD;\r\n}\r\n\r\nexport interface ISetResetPasswordLoadingSuccess {\r\n  readonly type: typeof RESET_PASSWORD_SUCCESS;\r\n}\r\n\r\nexport interface ISetResetPasswordLoadingFailed {\r\n  readonly type: typeof RESET_PASSWORD_FAILED;\r\n}\r\n\r\nexport interface ISetGetUserDataLoading {\r\n  readonly type: typeof GET_USER_DATA;\r\n}\r\n\r\nexport interface ISetGetUserDataLoadingSuccess {\r\n  readonly type: typeof GET_USER_DATA_SUCCESS;\r\n  payload: IUser;\r\n}\r\n\r\nexport interface ISetGetUserDataLoadingFailed {\r\n  readonly type: typeof GET_USER_DATA_FAILED;\r\n}\r\n\r\nexport interface ISetSendUserDataLoading {\r\n  readonly type: typeof SEND_USER_DATA;\r\n}\r\n\r\nexport interface ISetSendUserDataLoadingSuccess {\r\n  readonly type: typeof SEND_USER_DATA_SUCCESS;\r\n  payload: IUser;\r\n}\r\n\r\nexport interface ISetSendUserDataLoadingFailed {\r\n  readonly type: typeof SEND_USER_DATA_FAILED;\r\n}\r\n\r\nexport interface ISetLogoutLoading {\r\n  readonly type: typeof LOGOUT;\r\n}\r\n\r\nexport interface ISetLogoutLoadingSuccess {\r\n  readonly type: typeof LOGOUT_SUCCESS;\r\n}\r\n\r\nexport interface ISetLogoutLoadingFailed {\r\n  readonly type: typeof LOGOUT_FAILED;\r\n}\r\n\r\nexport interface ISetRefreshTokenLoading {\r\n  readonly type: typeof REFRESH_TOKEN;\r\n}\r\n\r\nexport interface ISetRefreshTokenLoadingSuccess {\r\n  readonly type: typeof REFRESH_TOKEN_SUCCESS;\r\n  payload: string;\r\n}\r\n\r\nexport interface ISetRefreshTokenLoadingFailed {\r\n  readonly type: typeof REFRESH_TOKEN_FAILED;\r\n}\r\n\r\nexport interface ISetForgotPasswordState {\r\n  readonly type: typeof SET_FORGOT_PASSWORD_STATE;\r\n  payload: boolean;\r\n}\r\n\r\nexport const setRegistrationLoading = () => ({type: REGISTRATION});\r\nexport const setRegistrationLoadingSuccess = (token: string) => ({type: REGISTRATION_SUCCESS, payload: token});\r\nexport const setRegistrationLoadingFailed = () => ({type: REGISTRATION_FAILED});\r\n\r\nexport const setLoginLoading = () => ({type: LOGIN});\r\nexport const setLoginLoadingSuccess = (token: string) => ({type: LOGIN_SUCCESS, payload: token});\r\nexport const setLoginLoadingFailed = () => ({type: LOGIN_FAILED});\r\n\r\nexport const setForgotPasswordLoading = () => ({type: FORGOT_PASSWORD});\r\nexport const setForgotPasswordLoadingSuccess = () => ({type: FORGOT_PASSWORD_SUCCESS});\r\nexport const setForgotPasswordLoadingFailed = () => ({type: FORGOT_PASSWORD_FAILED});\r\n\r\nexport const setResetPasswordLoading = () => ({type: RESET_PASSWORD});\r\nexport const setResetPasswordLoadingSuccess = () => ({type: RESET_PASSWORD_SUCCESS});\r\nexport const setResetPasswordLoadingFailed = () => ({type: RESET_PASSWORD_FAILED});\r\n\r\nexport const setGetUserDataLoading = () => ({type: GET_USER_DATA});\r\nexport const setGetUserDataLoadingSuccess = (userData: IUser) => ({type: GET_USER_DATA_SUCCESS, payload: userData});\r\nexport const setGetUserDataLoadingFailed = () => ({type: GET_USER_DATA_FAILED});\r\n\r\nexport const setSendUserDataLoading = () => ({type: SEND_USER_DATA});\r\nexport const setSendUserDataLoadingSuccess = (userData: IUser) => ({type: SEND_USER_DATA_SUCCESS, payload: userData});\r\nexport const setSendUserDataLoadingFailed = () => ({type: SEND_USER_DATA_FAILED});\r\n\r\nexport const setLogoutLoading = () => ({type: LOGOUT});\r\nexport const setLogoutLoadingSuccess = () => ({type: LOGOUT_SUCCESS});\r\nexport const setLogoutLoadingFailed = () => ({type: LOGOUT_FAILED});\r\n\r\nexport const setRefreshTokenLoading = () => ({type: REFRESH_TOKEN});\r\nexport const setRefreshTokenLoadingSuccess = (token: string) => ({type: REFRESH_TOKEN_SUCCESS, payload: token});\r\nexport const setRefreshTokenLoadingFailed = () => ({type: REFRESH_TOKEN_FAILED});\r\n\r\nexport const setForgotPasswordState = (state: boolean) => ({type: SET_FORGOT_PASSWORD_STATE, payload: state});\r\n\r\nexport const registration: AppThunk = (email: string, name: string, password: string) => {\r\n  return (dispatch: AppDispatch) => {\r\n    dispatch(setRegistrationLoading())\r\n\r\n    mainApi.register(email, name, password)\r\n      .then(res => {\r\n        dispatch(setRegistrationLoadingSuccess(res.accessToken))\r\n        localStorage.setItem('refreshToken', res.refreshToken)\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setRegistrationLoadingFailed())\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const login: AppThunk = (email: string, password: string) => {\r\n  return (dispatch: AppDispatch) => {\r\n    dispatch(setLoginLoading())\r\n\r\n    mainApi.login(email, password)\r\n      .then(res => {\r\n        dispatch(setLoginLoadingSuccess(res))\r\n        localStorage.setItem('refreshToken', res.refreshToken)\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setLoginLoadingFailed())\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const getUserData: AppThunk = (accessToken: string) => {\r\n  return (dispatch: AppDispatch) => {\r\n    dispatch(setGetUserDataLoading())\r\n\r\n    mainApi.getUserData(accessToken)\r\n      .then((res) => {\r\n        dispatch(setGetUserDataLoadingSuccess(res.user))\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setGetUserDataLoadingFailed())\r\n        if (err.status === tokenExpiredError || err.status === unauthorizedError) {\r\n          console.log(`%c ${err.statusText} - ${err.status}. Токен недействителен, необходимо обновить токен`, 'background-color: #4c4cff; color: white; padding: 4px 8px; border-radius: 4px; margin: 4px;')\r\n          // @ts-ignore\r\n          dispatch(refreshToken(localStorage.getItem('refreshToken'), 'getUserData'))\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const sendUserData: AppThunk = (accessToken: string, name: string, email: string, password: string) => {\r\n  return (dispatch: AppDispatch) => {\r\n    dispatch(setSendUserDataLoading())\r\n\r\n    mainApi.sendUserData(accessToken, name, email, password)\r\n      .then((res) => {\r\n        dispatch(setSendUserDataLoadingSuccess(res.user))\r\n      })\r\n      .catch((err) => {\r\n        if (err.status === tokenExpiredError) {\r\n          // @ts-ignore\r\n          dispatch(refreshToken(localStorage.getItem('refreshToken'), \"getUserData\"))\r\n        }\r\n\r\n        dispatch(setSendUserDataLoadingFailed())\r\n      })\r\n  }\r\n}\r\n\r\nconst refreshToken: AppThunk = (refreshToken: string) => {\r\n  return (dispatch: AppDispatch) => {\r\n    dispatch(setRefreshTokenLoading())\r\n\r\n    mainApi.refreshToken(refreshToken)\r\n      .then((res) => {\r\n        localStorage.setItem('refreshToken', res.refreshToken)\r\n        dispatch(setRefreshTokenLoadingSuccess(res.accessToken))\r\n      })\r\n      .catch((err) => {\r\n        console.log(`%c ${err.statusText} - ${err.status}. Не удалось обновить токен, необходима авторизация`, 'background-color: #4c4cff; color: white; padding: 4px 8px; border-radius: 4px; margin: 4px;');\r\n        dispatch(setRefreshTokenLoadingFailed())\r\n      })\r\n  }\r\n}\r\n\r\nexport const forgotPassword: AppThunk = (email: string) => {\r\n  return (dispatch: AppDispatch) => {\r\n    dispatch(setForgotPasswordLoading())\r\n\r\n    mainApi.sendEmail(email)\r\n      .then(() => {\r\n        setForgotPasswordLoadingSuccess()\r\n      })\r\n      .catch((err) => {\r\n        setForgotPasswordLoadingFailed()\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const resetPassword: AppThunk = (password: string, code: string) => {\r\n  return (dispatch: AppDispatch) => {\r\n    dispatch(setResetPasswordLoading())\r\n\r\n    mainApi.resetPassword(password, code)\r\n      .then(() => {\r\n        setResetPasswordLoadingSuccess()\r\n      })\r\n      .catch((err) => {\r\n        setResetPasswordLoadingFailed();\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const logout: AppThunk = (refreshToken: string | null) => {\r\n  return (dispatch: AppDispatch) => {\r\n    dispatch(setLogoutLoading())\r\n\r\n    mainApi.logout(refreshToken)\r\n      .then(() => {\r\n        localStorage.removeItem('refreshToken')\r\n        dispatch(setLogoutLoadingSuccess())\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setLoginLoadingFailed())\r\n        console.log(err)\r\n      })\r\n  }\r\n}","import {\r\n  TypedUseSelectorHook,\r\n  useSelector as selectorHook,\r\n  useDispatch as dispatchHook,\r\n} from 'react-redux';\r\nimport {AppDispatch, AppThunk, RootState} from '../types/types';\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();","import {FC, useState, useRef, useEffect, FormEvent, ChangeEvent} from \"react\";\r\nimport LoginStyles from \"./login.module.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  PasswordInput,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { login } from \"../../services/actions/user\";\r\nimport {useDispatch, useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst Login:FC = () => {\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const userData = useSelector((state) => state.userData.userData);\r\n\r\n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPasswordValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!emailValue || !passwordValue) {\r\n      return;\r\n    }\r\n\r\n    dispatch(login(emailValue, passwordValue))\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      (location.state && location.state.previousLocation) ? history.push(location.state.previousLocation.pathname) : history.push('/');\r\n    }\r\n  }, [userData, history, location])\r\n\r\n  return (\r\n    <article className={LoginStyles.wrapper}>\r\n      <form onSubmit={handleSubmit} className={LoginStyles.form}>\r\n        <h1 className={`${LoginStyles.title} text text_type_main-medium`}>\r\n          Вход\r\n        </h1>\r\n        <div className=\"mt-6 mb-6\">\r\n          <Input\r\n            type={\"text\"}\r\n            placeholder={\"E-mail\"}\r\n            onChange={(e) => setEmailValue(e.target.value)}\r\n            value={emailValue}\r\n            name={\"e-mail\"}\r\n            error={false}\r\n            ref={inputRef}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <PasswordInput\r\n            onChange={onPasswordChange}\r\n            value={passwordValue}\r\n            name={\"password\"}\r\n          />\r\n        </div>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Войти\r\n        </Button>\r\n      </form>\r\n      <p className=\"text text_type_main-default text_color_inactive\">\r\n        {\"Вы — новый пользователь? \"}\r\n        <Link className={LoginStyles.link} to=\"/register\">\r\n          Зарегистрироваться\r\n        </Link>\r\n      </p>\r\n      <p className=\"text text_type_main-default text_color_inactive mt-4\">\r\n        {\"Забыли пароль? \"}\r\n        <Link className={LoginStyles.link} to=\"/forgot-password\">\r\n          Восстановить пароль\r\n        </Link>\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {FC, useState, useRef, useEffect, ChangeEvent, FormEvent} from \"react\";\r\nimport RegisterStyles from \"./register.module.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  PasswordInput,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { registration } from \"../../services/actions/user\";\r\nimport {useDispatch, useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst Register: FC = () => {\r\n  const [nameValue, setNameValue] = useState(\"\");\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state) => state.userData.userData);\r\n  const history = useHistory();\r\n\r\n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPasswordValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!nameValue || !emailValue || !passwordValue) {\r\n      return;\r\n    }\r\n\r\n    dispatch(registration(emailValue, nameValue, passwordValue));\r\n  };\r\n\r\n  useEffect(() => {\r\n    userData && history.push('/')\r\n  }, [userData, history])\r\n\r\n  return (\r\n    <article className={RegisterStyles.wrapper}>\r\n      <form onSubmit={handleSubmit} className={RegisterStyles.form}>\r\n        <h1 className={`${RegisterStyles.title} text text_type_main-medium`}>\r\n          Регистрация\r\n        </h1>\r\n        <div className=\"mt-6 mb-6\">\r\n          <Input\r\n            type={\"text\"}\r\n            placeholder={\"Имя\"}\r\n            onChange={(e) => setNameValue(e.target.value)}\r\n            value={nameValue}\r\n            name={\"name\"}\r\n            error={false}\r\n            ref={inputRef}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <Input\r\n            type={\"text\"}\r\n            placeholder={\"E-mail\"}\r\n            onChange={(e) => setEmailValue(e.target.value)}\r\n            value={emailValue}\r\n            name={\"e-mail\"}\r\n            error={false}\r\n            ref={inputRef}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <PasswordInput\r\n            onChange={onPasswordChange}\r\n            value={passwordValue}\r\n            name={\"password\"}\r\n          />\r\n        </div>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Зарегистрироваться\r\n        </Button>\r\n      </form>\r\n      <p className=\"text text_type_main-default text_color_inactive\">\r\n        {\"Уже зарегистрированы? \"}\r\n        <Link className={RegisterStyles.link} to=\"/login\">\r\n          Войти\r\n        </Link>\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import {FC, useState, useRef, FormEvent} from \"react\";\r\nimport ForgotPasswordStyles from \"./forgot-password.module.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Input,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { forgotPassword, setForgotPasswordState } from \"../../services/actions/user\";\r\nimport {useDispatch} from \"../../services/hooks/hooks\";\r\n\r\nconst ForgotPassword:FC = () => {\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!emailValue) {\r\n      return;\r\n    }\r\n\r\n    dispatch(forgotPassword(emailValue));\r\n    dispatch(setForgotPasswordState(true));\r\n    setEmailValue(\"\");\r\n    history.push('/reset-password')\r\n\r\n  };\r\n\r\n  return (\r\n    <article className={ForgotPasswordStyles.wrapper}>\r\n      <form onSubmit={handleSubmit} className={ForgotPasswordStyles.form}>\r\n        <h1\r\n          className={`${ForgotPasswordStyles.title} text text_type_main-medium mb-6`}\r\n        >\r\n          Восстановление пароля\r\n        </h1>\r\n        <div className=\"mb-6\">\r\n          <Input\r\n            type={\"text\"}\r\n            placeholder={\"Укажите e-mail\"}\r\n            onChange={(evt) => setEmailValue(evt.target.value)}\r\n            value={emailValue}\r\n            name={\"e-mail\"}\r\n            error={false}\r\n            ref={inputRef}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Восстановить\r\n        </Button>\r\n      </form>\r\n      <p className=\"text text_type_main-default text_color_inactive\">\r\n        {\"Вспомнили пароль? \"}\r\n        <Link className={ForgotPasswordStyles.link} to=\"/login\">\r\n          Войти\r\n        </Link>\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import {FC, useState, useRef, useEffect, ChangeEvent, FormEvent} from \"react\";\r\nimport ResetPasswordStyles from \"./reset-password.module.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Input,\r\n  Button,\r\n  PasswordInput,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { resetPassword, setForgotPasswordState } from \"../../services/actions/user\";\r\nimport {useDispatch, useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst ResetPassword: FC = () => {\r\n  const [codeValue, setCodeValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const isPasswordForgot = useSelector((state) => state.userData.isPasswordForgot);\r\n  const location = useLocation();\r\n  const userData = useSelector((state) => state.userData.userData);\r\n\r\n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPasswordValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!passwordValue || !codeValue) {\r\n      return;\r\n    }\r\n\r\n    dispatch(resetPassword(passwordValue, codeValue));\r\n    dispatch(setForgotPasswordState(false));\r\n    setCodeValue(\"\");\r\n    setPasswordValue(\"\");\r\n    history.push('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      (location.state && location.state.previousLocation) ? history.push(location.state.previousLocation.pathname) : history.push('/');\r\n    } else {\r\n      !isPasswordForgot && history.push('/forgot-password');\r\n    }\r\n  }, [userData, history, location, isPasswordForgot])\r\n\r\n  return (\r\n    <article className={ResetPasswordStyles.wrapper}>\r\n      <form onSubmit={handleSubmit} className={ResetPasswordStyles.form}>\r\n        <h1\r\n          className={`${ResetPasswordStyles.title} text text_type_main-medium mb-6`}\r\n        >\r\n          Восстановление пароля\r\n        </h1>\r\n        <PasswordInput\r\n          onChange={onPasswordChange}\r\n          value={passwordValue}\r\n          name={\"password\"}\r\n          //@ts-ignore\r\n          placeholder={\"Введите новый пароль\"}\r\n        />\r\n        <div className=\"mb-6 mt-6\">\r\n          <Input\r\n            type={\"text\"}\r\n            placeholder={\"Введите код из письма\"}\r\n            onChange={(e) => setCodeValue(e.target.value)}\r\n            value={codeValue}\r\n            name={\"e-mail\"}\r\n            error={false}\r\n            ref={inputRef}\r\n            errorText={\"Ошибка\"}\r\n            size={\"default\"}\r\n          />\r\n        </div>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Сохранить\r\n        </Button>\r\n      </form>\r\n      <p className=\"text text_type_main-default text_color_inactive\">\r\n        {\"Вспомнили пароль? \"}\r\n        <Link className={ResetPasswordStyles.link} to=\"/login\">\r\n          Войти\r\n        </Link>\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import ProfileFormStyles from './profile-form.module.css';\r\nimport {FC, useState, useRef, useEffect, ChangeEvent, FormEvent} from \"react\";\r\nimport {sendUserData} from \"../../services/actions/user\";\r\nimport {Input, Button} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {useDispatch, useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst ProfileForm: FC = () => {\r\n  const userData = useSelector((state) => state.userData.userData);\r\n  const accessToken = useSelector((state) => state.userData.accessToken);\r\n  const dispatch = useDispatch();\r\n\r\n  const [nameValue, setNameValue] = useState(\"?\");\r\n  const [loginValue, setLoginValue] = useState(\"?\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [isDataChanged, setIsDataChanged] = useState(false);\r\n  const nameInputRef = useRef<HTMLInputElement | null>(null);\r\n  const emailInputRef = useRef<HTMLInputElement | null>(null);\r\n  const passwordInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const onNameClick = () => null !== nameInputRef.current && nameInputRef.current.focus();\r\n\r\n  const onEmailClick = () => null !== emailInputRef.current && emailInputRef.current.focus();\r\n\r\n  const onPasswordClick = () => null !== passwordInputRef.current && passwordInputRef.current.focus();\r\n\r\n  const onNameChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const value = evt.target.value\r\n    setNameValue(value)\r\n    // @ts-ignore\r\n    value === userData.name ? setIsDataChanged(false) : setIsDataChanged(true)\r\n  }\r\n\r\n  const onEmailChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const value = evt.target.value\r\n    setLoginValue(value)\r\n    // @ts-ignore\r\n    value === userData.email ? setIsDataChanged(false) : setIsDataChanged(true)\r\n  }\r\n\r\n  const onPasswordChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const value = evt.target.value\r\n    setPasswordValue(value)\r\n    value === passwordValue ? setIsDataChanged(false) : setIsDataChanged(true)\r\n  }\r\n\r\n  const onSubmit = (evt: FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault();\r\n    dispatch(sendUserData(accessToken, nameValue, loginValue, passwordValue))\r\n  }\r\n\r\n  const onCancelEditing = () => {\r\n    // @ts-ignore\r\n    setNameValue(userData.name)\r\n    // @ts-ignore\r\n    setLoginValue(userData.email)\r\n    setPasswordValue('')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      // @ts-ignore\r\n      setLoginValue(userData.email);\r\n      // @ts-ignore\r\n      setNameValue(userData.name);\r\n      setPasswordValue('');\r\n    }\r\n  }, [userData]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className={ProfileFormStyles.form}>\r\n      <Input\r\n        type={\"text\"}\r\n        placeholder={\"Имя\"}\r\n        onChange={onNameChange}\r\n        icon={\"EditIcon\"}\r\n        value={nameValue}\r\n        name={\"name\"}\r\n        error={false}\r\n        ref={nameInputRef}\r\n        onIconClick={onNameClick}\r\n        errorText={\"Ошибка\"}\r\n        size={\"default\"}\r\n      />\r\n      <Input\r\n        type={\"text\"}\r\n        placeholder={\"Логин\"}\r\n        onChange={onEmailChange}\r\n        icon={\"EditIcon\"}\r\n        value={loginValue}\r\n        name={\"name\"}\r\n        error={false}\r\n        ref={emailInputRef}\r\n        onIconClick={onEmailClick}\r\n        errorText={\"Ошибка\"}\r\n        size={\"default\"}\r\n      />\r\n      <Input\r\n        type={\"text\"}\r\n        placeholder={\"Пароль\"}\r\n        onChange={onPasswordChange}\r\n        icon={\"EditIcon\"}\r\n        value={passwordValue}\r\n        name={\"name\"}\r\n        error={false}\r\n        ref={passwordInputRef}\r\n        onIconClick={onPasswordClick}\r\n        errorText={\"Ошибка\"}\r\n        size={\"default\"}\r\n      />\r\n      {\r\n        isDataChanged && (<div className={ProfileFormStyles.buttons_container}>\r\n          <Button onClick={onCancelEditing} type=\"secondary\" size=\"medium\">\r\n            Отмена\r\n          </Button>\r\n          <Button type=\"primary\" size=\"medium\">\r\n            Сохранить\r\n          </Button>\r\n        </div>)\r\n      }\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ProfileForm;","import {FC} from 'react';\r\nimport orderComponentStyles from \"./order-component.module.css\";\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport {IIngredient, IOrderComponentProps} from \"../../services/types/types\";\r\nimport {useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst OrderComponent: FC<IOrderComponentProps> = ({order, isHistory = false}) => {\r\n  const location = useLocation();\r\n  const {status, number, createdAt, name, ingredients} = order;\r\n  const orderIngredients = useSelector((state) => state.ingredientsData.ingredients)\r\n\r\n  const findIngredient = (ingredient: string, ingredients: IIngredient[]) => {\r\n    return ingredients.find((foundIngredient: IIngredient) => foundIngredient._id === ingredient)\r\n  }\r\n\r\n  const checkStatus = (status: string) => {\r\n    if (status === 'done') {\r\n      return 'Создан'\r\n    }\r\n  }\r\n\r\n  const calculateSum = () => {\r\n    let sum = 0;\r\n    ingredients.forEach((ingredient: string) => {\r\n      const find = orderIngredients.find((orderIngredient: IIngredient) => orderIngredient._id === ingredient)\r\n      if (find?.price) {\r\n        sum += find.price\r\n      }\r\n    })\r\n    return sum\r\n  }\r\n  \r\n  function formatDate(str: string) {\r\n    return new Date(str).toLocaleString()\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <Link className={orderComponentStyles.link} to={{\r\n        pathname: `${location.pathname}/${number}`,\r\n        state: {background: location},\r\n      }}>\r\n        <div className={orderComponentStyles.header}>\r\n          <p className=\"text text_type_digits-default\">{`#${number}`}</p>\r\n          <p className=\"text text_type_main-default text_color_inactive\">{formatDate(createdAt)}</p>\r\n        </div>\r\n        <h2 className=\"text text_type_main-medium\">{name}</h2>\r\n        {\r\n          (status && isHistory) && <p className=\"text text_type_main-default\">{checkStatus(status)}</p>\r\n        }\r\n        <div className={orderComponentStyles.footer}>\r\n          <ul className={orderComponentStyles.ingredients_list}>\r\n            {\r\n              ingredients.map((ingredient, idx) => {\r\n                  const foundIngredient = findIngredient(ingredient, orderIngredients)\r\n                  if (idx < 5) {\r\n                    return (\r\n                      <li key={idx} style={{zIndex: 999 - idx}} className={orderComponentStyles.ingredients_list_item}>\r\n                        <img className={orderComponentStyles.ingredients_list_item_image} src={foundIngredient?.image}\r\n                             alt={foundIngredient?.name}/>\r\n                      </li>\r\n                    )\r\n                  } else if (idx === 6) {\r\n                    return (<li key={idx} style={{zIndex: 999 - idx}} className={orderComponentStyles.last_ingredient}>\r\n                      <img className={orderComponentStyles.last_ingredient_image} src={foundIngredient?.image}\r\n                           alt={foundIngredient?.name}/>\r\n                      <div className={orderComponentStyles.overlay}></div>\r\n                      <span className={`text text_type_main-default ${orderComponentStyles.last_ingredient_count}`}>+{ingredients.length - 5}</span>\r\n                    </li>)\r\n                  }\r\n                  return null\r\n                }\r\n              )\r\n            }\r\n          </ul>\r\n          <div className={orderComponentStyles.total}>\r\n            <span className=\"text text_type_digits-default\">{calculateSum()}</span>\r\n            <CurrencyIcon type=\"primary\"/>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default OrderComponent;\r\n","import {AppDispatch, AppThunk, IOrder} from \"../types/types\";\r\nimport mainApi from \"../../utils/Api\";\r\n\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_ALL_ORDERS: 'WS_GET_ORDERS' = 'WS_GET_ORDERS';\r\n\r\nexport const WS_USER_ORDERS_CONNECTION_START: 'WS_USER_ORDERS_CONNECTION_START' = 'WS_USER_ORDERS_CONNECTION_START';\r\nexport const WS_USER_ORDERS_CONNECTION_SUCCESS: 'WS_USER_ORDERS_CONNECTION_SUCCESS' = 'WS_USER_ORDERS_CONNECTION_SUCCESS';\r\nexport const WS_USER_ORDERS_CONNECTION_ERROR: 'WS_USER_ORDERS_CONNECTION_ERROR' = 'WS_USER_ORDERS_CONNECTION_ERROR';\r\nexport const WS_USER_ORDERS_CONNECTION_CLOSED: 'WS_USER_ORDERS_CONNECTION_CLOSED' = 'WS_USER_ORDERS_CONNECTION_CLOSED';\r\nexport const WS_GET_USER_ORDERS: 'WS_GET_USER_ORDERS' = 'WS_GET_USER_ORDERS';\r\n\r\nexport const GET_ORDER_INFO: 'GET_ORDER_INFO' = 'GET_ORDER_INFO';\r\nexport const GET_ORDER_INFO_SUCCESS: 'GET_ORDER_INFO_SUCCESS' = 'GET_ORDER_INFO_SUCCESS';\r\nexport const GET_ORDER_INFO_FAILED: 'GET_ORDER_INFO_FAILED' = 'GET_ORDER_INFO_FAILED';\r\nexport const CLEAN_ORDER_INFO: 'CLEAN_ORDER_INFO' = 'CLEAN_ORDER_INFO';\r\n\r\nexport interface IWSAllOrdersConnectionStart {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n}\r\n\r\nexport interface IWSUserOrdersConnectionStart {\r\n  readonly type: typeof WS_USER_ORDERS_CONNECTION_START;\r\n}\r\n\r\nexport const wsAllOrdersConnectionStart = () => {\r\n  return {\r\n    type: WS_CONNECTION_START\r\n  };\r\n};\r\n\r\nexport const wsUserOrdersConnectionStart = () => {\r\n  return {\r\n    type: WS_USER_ORDERS_CONNECTION_START\r\n  };\r\n};\r\n\r\nexport const wsAllOrdersConnectionClosed = () => {\r\n  return {\r\n    type: WS_CONNECTION_CLOSED\r\n  };\r\n};\r\n\r\nexport const wsUserOrdersConnectionClosed = () => {\r\n  return {\r\n    type: WS_USER_ORDERS_CONNECTION_CLOSED\r\n  };\r\n};\r\n\r\nexport const getOrderInfoLoading = () => ({type: GET_ORDER_INFO})\r\nexport const getOrderInfoLoadingSuccess = (data: IOrder) => ({type: GET_ORDER_INFO_SUCCESS, payload: data})\r\nexport const getOrderInfoLoadingFailed = () => ({type: GET_ORDER_INFO_FAILED})\r\nexport const cleanOrderInfo = () => ({type: CLEAN_ORDER_INFO})\r\n\r\nexport const getOrderInfo: AppThunk = (orderNumber: number) => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch(getOrderInfoLoading())\r\n\r\n    mainApi.getOrderInfo(orderNumber)\r\n      .then(data => {\r\n        if (data) {\r\n          dispatch(getOrderInfoLoadingSuccess(data.orders[0]))\r\n        }\r\n      })\r\n      .catch(() => dispatch(getOrderInfoLoadingFailed()))\r\n  }\r\n}","import React, {FC, useEffect} from 'react';\r\nimport orderHistoryStyles from './order-history.module.css';\r\nimport OrderComponent from \"../order-component/order-component\";\r\nimport {IOrder} from \"../../services/types/types\";\r\nimport {wsUserOrdersConnectionClosed, wsUserOrdersConnectionStart} from \"../../services/actions/orders\";\r\nimport {useDispatch, useSelector} from \"../../services/hooks/hooks\";\r\nimport Loader from \"../loader/loader\";\r\n\r\nconst OrderHistory: FC = () => {\r\n  const userOrders = useSelector((state) => state.ordersData.userOrders)\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(wsUserOrdersConnectionStart());\r\n\r\n    return () => {\r\n      dispatch(wsUserOrdersConnectionClosed())\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <ul className={orderHistoryStyles.list}>\r\n      <>\r\n        {\r\n          userOrders.length > 0 ? (\r\n            <>\r\n              {\r\n                userOrders.map((order: IOrder, idx: number) => (\r\n                  <OrderComponent key={idx} isHistory={true} order={order}/>\r\n                ))\r\n              }\r\n            </>\r\n          ) : (<Loader/>)\r\n        }\r\n      </>\r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default OrderHistory;\r\n","import ProfileStyles from \"./profile.module.css\";\r\nimport {NavLink, Route, useRouteMatch} from \"react-router-dom\";\r\nimport {logout} from \"../../services/actions/user\";\r\nimport ProfileForm from '../../components/profile-form/profile-form';\r\nimport OrderHistory from '../../components/order-history/order-history';\r\nimport {FC} from 'react';\r\nimport {useDispatch} from \"../../services/hooks/hooks\";\r\n\r\nconst Profile:FC = () => {\r\n  const dispatch = useDispatch();\r\n  const {path, url} = useRouteMatch();\r\n\r\n  const handleLogout = () => {\r\n    const refreshToken = localStorage.getItem('refreshToken');\r\n    dispatch(logout(refreshToken))\r\n  }\r\n\r\n  return (\r\n    <article className={ProfileStyles.wrapper}>\r\n      <nav className={ProfileStyles.navigation}>\r\n        <ul className={`${ProfileStyles.list}`}>\r\n          <li className={ProfileStyles.list_item}>\r\n            <NavLink\r\n              activeClassName={ProfileStyles.link_active}\r\n              className={`${ProfileStyles.link} text text_type_main-medium`}\r\n              to={`${url}`}\r\n              exact\r\n            >\r\n              Профиль\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              activeClassName={ProfileStyles.link_active}\r\n              className={`${ProfileStyles.link} text text_type_main-medium`}\r\n              to={`${url}/orders`}\r\n            >\r\n              История заказов\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              activeClassName={ProfileStyles.link_active}\r\n              className={`${ProfileStyles.link} text text_type_main-medium`}\r\n              to=\"/login\"\r\n              onClick={handleLogout}\r\n            >\r\n              Выход\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <p\r\n          className={`${ProfileStyles.text} text text_type_main-default text_color_inactive`}\r\n        >\r\n          В этом разделе вы можете изменить свои персональные данные\r\n        </p>\r\n      </nav>\r\n      <Route\r\n        //@ts-ignore\r\n        exact={true}\r\n        path={`${path}`}>\r\n        <ProfileForm/>\r\n      </Route>\r\n      <Route\r\n        path={`${path}/orders`}>\r\n        <OrderHistory/>\r\n      </Route>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import NotFoundStyles from \"./not-found.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {FC} from 'react';\r\n\r\nconst NotFound: FC = () => {\r\n  return (\r\n    <article className={NotFoundStyles.wrapper}>\r\n      <p className=\"text text_type_digits-large text_color_inactive\">404</p>\r\n      <h1 className=\"text text_type_main-large\">\r\n        Страница не найдена\r\n      </h1>\r\n      <h2 className=\"text text_type_main-medium\">\r\n        Ну не найдена и не найдена. У нас есть очень крутые бургеры!\r\n      </h2>\r\n      <Link className={NotFoundStyles.link} to=\"/\">\r\n        <Button type=\"primary\" size=\"medium\">\r\n          К бургерам\r\n        </Button>\r\n      </Link>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import {Route, Redirect, useLocation, RouteProps} from 'react-router-dom';\r\nimport {FC} from 'react';\r\nimport {useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst ProtectedRoute: FC<RouteProps> = ({children, ...rest}) => {\r\n  const userData = useSelector((state) => state.userData.userData);\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      //@ts-ignore\r\n      render={\r\n        () => userData ? (children) : <Redirect to={{\r\n          pathname: `/login`,\r\n          state: {previousLocation: location},\r\n        }}/>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;","export const CHANGE_ORDER_DETAILS_POPUP_STATE: 'CHANGE_ORDER_DETAILS_POPUP_STATE' = 'CHANGE_ORDER_DETAILS_POPUP_STATE';\r\nexport const CHANGE_INGREDIENTS_POPUP_STATE: 'CHANGE_INGREDIENTS_POPUP_STATE' = 'CHANGE_INGREDIENTS_POPUP_STATE';\r\nexport const CHANGE_ORDER_POPUP_STATE: 'CHANGE_ORDER_POPUP_STATE' = 'CHANGE_ORDER_POPUP_STATE';\r\n\r\nexport interface IChangeOrderDetailsPopupState {\r\n  readonly type: typeof CHANGE_ORDER_DETAILS_POPUP_STATE;\r\n  readonly payload: boolean;\r\n}\r\n\r\nexport interface IChangeIngredientsPopupState {\r\n  readonly type: typeof CHANGE_INGREDIENTS_POPUP_STATE;\r\n  readonly payload: boolean;\r\n}\r\n\r\nexport interface IChangeOrderPopupState {\r\n  readonly type: typeof CHANGE_ORDER_POPUP_STATE;\r\n  readonly payload: boolean;\r\n}\r\n\r\nexport const changeOrderDetailsPopupState = (status: boolean) => ({\r\n  type: CHANGE_ORDER_DETAILS_POPUP_STATE,\r\n  payload: status\r\n})\r\nexport const changeIngredientsPopupState = (status: boolean) => ({\r\n  type: CHANGE_INGREDIENTS_POPUP_STATE,\r\n  payload: status\r\n})\r\nexport const changeOrderPopupState = (status: boolean) => ({type: CHANGE_ORDER_POPUP_STATE, payload: status})","import mainApi from '../../utils/Api';\r\nimport {deleteAllIngredients} from './ingredients';\r\nimport {AppDispatch, AppThunk, IOrder, TIngredientId} from \"../types/types\";\r\n\r\nexport const GET_ORDER_DATA: 'GET_ORDER_DATA' = 'GET_ORDER_DATA';\r\nexport const GET_ORDER_DATA_FAILED: 'GET_ORDER_DATA_FAILED' = 'GET_ORDER_DATA_FAILED';\r\nexport const GET_ORDER_DATA_SUCCESS: 'GET_ORDER_DATA_SUCCESS' = 'GET_ORDER_DATA_SUCCESS';\r\nexport const DELETE_ORDER_DATA: 'DELETE_ORDER_DATA' = 'DELETE_ORDER_DATA';\r\n\r\nexport interface ISetOrderDataLoading {\r\n  readonly type: typeof GET_ORDER_DATA;\r\n}\r\n\r\nexport interface ISetOrderDataLoadingSuccess {\r\n  readonly type: typeof GET_ORDER_DATA_SUCCESS;\r\n  readonly payload: IOrder;\r\n}\r\n\r\nexport interface ISetOrderDataLoadingFailed {\r\n  readonly type: typeof GET_ORDER_DATA_FAILED;\r\n}\r\n\r\nexport interface IDeleteOrderData {\r\n  readonly type: typeof DELETE_ORDER_DATA;\r\n}\r\n\r\nexport const setOrderDataLoading = () => ({type: GET_ORDER_DATA})\r\nexport const setOrderDataLoadingSuccess = (data: IOrder) => ({type: GET_ORDER_DATA_SUCCESS, payload: data})\r\nexport const setOrderDataLoadingFailed = () => ({type: GET_ORDER_DATA_FAILED})\r\nexport const deleteOrderData = () => ({type: DELETE_ORDER_DATA})\r\n\r\nexport const getOrderData: AppThunk = (ingredientsIds: TIngredientId[], token: string) => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch(setOrderDataLoading())\r\n\r\n    mainApi.sendIngredients(ingredientsIds, token)\r\n      .then(data => {\r\n        if (data) {\r\n          dispatch(setOrderDataLoadingSuccess(data))\r\n        }\r\n      })\r\n      .then(() => {\r\n        dispatch(deleteAllIngredients())\r\n      })\r\n      .catch(() => dispatch(setOrderDataLoadingFailed()))\r\n  }\r\n}","/* eslint-disable no-restricted-globals */\r\nexport const getCoords = (elem: HTMLElement | null) => {\r\n  let box = elem?.getBoundingClientRect();\r\n\r\n  if (box) {\r\n    return {\r\n      top: Math.round(box.top + scrollY),\r\n      left: Math.round(box.left + scrollX)\r\n    };\r\n  }\r\n}","import ingredientStyles from \"./ingredient.module.css\";\r\nimport {\r\n  CurrencyIcon,\r\n  Counter,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {useDrag} from \"react-dnd\";\r\nimport {\r\n  addIngredient,\r\n  selectIngredient,\r\n} from \"../../services/actions/ingredients\";\r\nimport {changeIngredientsPopupState} from \"../../services/actions/popup\";\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport {FC, MouseEvent, useEffect, useState} from 'react';\r\nimport {IIngredient, IIngredientProps} from \"../../services/types/types\";\r\nimport {useDispatch, useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst Ingredient: FC<IIngredientProps> = ({ingredient}) => {\r\n  const {image, price, name, _id, type} = ingredient;\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n  const chosenIngredients = useSelector(\r\n    (state) => state.ingredientsData.chosenIngredients\r\n  );\r\n  const initialIngredients = useSelector(\r\n    (state) => state.ingredientsData.ingredients\r\n  );\r\n\r\n  const [{isDrag}, dragRef] = useDrag({\r\n    type: \"ingredient\",\r\n    item: {_id},\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  let ingredientCounter = 0;\r\n\r\n  chosenIngredients.forEach(\r\n    (ingredient: IIngredient) =>\r\n      ingredient.name === name &&\r\n      (ingredient.type === \"bun\"\r\n        ? (ingredientCounter += 2)\r\n        : (ingredientCounter += 1))\r\n  );\r\n\r\n  const handleChoseIngredient = (evt: MouseEvent<HTMLLIElement>) => {\r\n    evt.preventDefault();\r\n    const targetIngredient = initialIngredients.find(\r\n      (ingredient: IIngredient) => ingredient._id === evt.currentTarget.dataset.id\r\n    );\r\n    const selectedBun = chosenIngredients.find(\r\n      (ingredient: IIngredient) => ingredient.type === \"bun\"\r\n    );\r\n    // @ts-ignore\r\n    const selectedBunIndex = chosenIngredients.indexOf(selectedBun);\r\n\r\n    if (targetIngredient?.type === \"bun\" && selectedBun) {\r\n      const chosenIngredientsClone = chosenIngredients.slice();\r\n      chosenIngredientsClone.splice(selectedBunIndex, 1, targetIngredient);\r\n      dispatch(addIngredient(chosenIngredientsClone));\r\n    } else {\r\n      // @ts-ignore\r\n      dispatch(addIngredient([...chosenIngredients, targetIngredient]));\r\n    }\r\n  };\r\n\r\n  const handleIngredientExplore = (evt: MouseEvent<HTMLLIElement>) => {\r\n    const id = evt.currentTarget.dataset.id;\r\n    const foundIngredient = initialIngredients.find(\r\n      (ingredient: IIngredient) => ingredient._id === id\r\n    );\r\n    // @ts-ignore\r\n    dispatch(selectIngredient(foundIngredient));\r\n    dispatch(changeIngredientsPopupState(true));\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if(type !== 'bun' && !chosenIngredients.some(ingredient => ingredient.type === 'bun')) {\r\n      setIsDisabled(true)\r\n    } else {\r\n      setIsDisabled(false)\r\n    }\r\n  }, [chosenIngredients, type])\r\n\r\n  return (\r\n    <li\r\n      data-id={_id}\r\n      onContextMenu={handleChoseIngredient}\r\n      onClick={handleIngredientExplore}\r\n      className={`${ingredientStyles.list_item} ${isDrag && ingredientStyles.moving\r\n      } ${type !== 'bun' ? isDisabled && ingredientStyles.list_item_disabled : ''}`}\r\n      ref={dragRef}\r\n    >\r\n      <Link className={ingredientStyles.link} to={{\r\n        pathname: `/ingredients/${_id}`,\r\n        state: {background: location},\r\n      }}>\r\n        <img\r\n          alt={name}\r\n          src={image}\r\n          className={`${ingredientStyles.image} ml-4 mr-4`}\r\n        />\r\n        <div className={`${ingredientStyles.price_info} mt-4 mb-4`}>\r\n          <span className=\"text text_type_digits-default mr-2\">{price}</span>\r\n          <CurrencyIcon type=\"primary\"/>\r\n        </div>\r\n        <h3 className={`${ingredientStyles.text} text text_type_main-default`}>\r\n          {name}\r\n        </h3>\r\n        {ingredientCounter > 0 && (\r\n          <Counter count={ingredientCounter} size=\"default\"/>\r\n        )}\r\n        <div className={`${ingredientStyles.hint_icons}`}>\r\n          <span className={`${ingredientStyles.left_click_icon}`}/>\r\n          <span className={`${ingredientStyles.right_click_icon}`}/>\r\n          <span className={`${ingredientStyles.drag_icon}`}/>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Ingredient;\r\n","import { useState, MouseEvent, FC} from 'react';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport burgerIngredientsStyle from './burger-ingredients.module.css';\r\nimport { compareCoords } from '../../utils/compare-coords';\r\nimport Ingredient from '../ingredient/ingredient';\r\nimport {IIngredient} from \"../../services/types/types\";\r\nimport {useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst BurgerIngredients: FC = () => {\r\n  const initialIngredients = useSelector((state) => state.ingredientsData.ingredients)\r\n\r\n  const [current, setCurrent] = useState('bun')\r\n\r\n  const scrollHandler = (evt: MouseEvent<HTMLDivElement>) => {\r\n    evt.target.addEventListener('scroll', function () {\r\n      setCurrent(compareCoords(burgerIngredientsStyle.main_container))\r\n    });\r\n  }\r\n\r\n  const handleTabClick = (type: string) => {\r\n    setCurrent(type)\r\n    document.querySelector<HTMLElement>(`#${type}`)?.scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n  }\r\n\r\n  return (\r\n    <div className={burgerIngredientsStyle.main_container}>\r\n      <h1 className=\"mt-10 mb-5 text text_type_main-large\">Соберите бургер</h1>\r\n      <div style={{ display: 'flex' }}>\r\n        <Tab value=\"bun\" active={current === 'bun'} onClick={handleTabClick}>\r\n          Булки\r\n        </Tab>\r\n        <Tab value=\"sauce\" active={current === 'sauce'} onClick={handleTabClick}>\r\n          Соусы\r\n        </Tab>\r\n        <Tab value=\"main\" active={current === 'main'} onClick={handleTabClick}>\r\n          Начинки\r\n        </Tab>\r\n      </div>\r\n      <div onScroll={scrollHandler} className={`${burgerIngredientsStyle.ingredients_container} mt-10 ingredients-container`}>\r\n        <h2 id=\"bun\" className=\"mb-6 text text_type_main-medium\">\r\n          Булки\r\n        </h2>\r\n        <ul className={`${burgerIngredientsStyle.list} pt-6 pb-10 pr-4 pl-4`}>\r\n          {initialIngredients.map((item: IIngredient) => item.type === 'bun' && <Ingredient key={item._id} ingredient={item} />)}\r\n        </ul>\r\n        <h2 id=\"sauce\" className=\"mb-6 text text_type_main-medium\">\r\n          Соусы\r\n        </h2>\r\n        <ul className={`${burgerIngredientsStyle.list} pt-6 pb-10 pr-4 pl-4`}>\r\n          {initialIngredients.map((item: IIngredient) => item.type === 'sauce' && <Ingredient key={item._id} ingredient={item} />)}\r\n        </ul>\r\n        <h2 id=\"main\" className=\"mb-6 text text_type_main-medium\">\r\n          Начинки\r\n        </h2>\r\n        <ul className={`${burgerIngredientsStyle.list} pt-6 pb-10 pr-4 pl-4`}>\r\n          {initialIngredients.map((item: IIngredient) => item.type === 'main' && <Ingredient key={item._id} ingredient={item} />)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredients;","import {getCoords} from './get-coords'\r\nimport {IAbsoluteCoords, IGetCoords} from \"../services/types/types\";\r\n\r\nexport const compareCoords = (className: string) => {\r\n\r\n  const bunTitleTopCoords = (getCoords(document.querySelector('#bun')) as IGetCoords).top\r\n  const sauceTitleTopCoords = (getCoords(document.querySelector('#sauce')) as IGetCoords).top\r\n  const mainTitleTopCoords = (getCoords(document.querySelector('#main')) as IGetCoords).top\r\n  const mainContainerTopCoords = (getCoords(document.querySelector(`.${className}`)) as IGetCoords).top\r\n\r\n  const absoluteCoords = [\r\n    {\r\n      title: 'bun',\r\n      value: Math.abs(mainContainerTopCoords - bunTitleTopCoords),\r\n    },\r\n    {\r\n      title: 'sauce',\r\n      value: Math.abs(mainContainerTopCoords - sauceTitleTopCoords),\r\n    },\r\n    {\r\n      title: 'main',\r\n      value: Math.abs(mainContainerTopCoords - mainTitleTopCoords)\r\n    },\r\n  ]\r\n\r\n  const coordsValues = absoluteCoords.map(coord => coord.value)\r\n  const minValue = Math.min(...coordsValues)\r\n  return (absoluteCoords.find(coord => coord.value === minValue) as IAbsoluteCoords).title\r\n}","import chosenIngredientStyle from './chosen-ingredient.module.css';\r\nimport {DragIcon, ConstructorElement} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {useDrag, useDrop} from \"react-dnd\";\r\nimport {useRef, FC} from 'react';\r\nimport {deleteIngredient} from '../../services/actions/ingredients';\r\nimport {IIngredient, IChosenIngredientProps} from '../../services/types/types';\r\nimport {useDispatch, useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst ChosenIngredient: FC<IChosenIngredientProps> = ({ingredient, id, moveIngredient, index}) => {\r\n  const {name, price, image,} = ingredient;\r\n  const dispatch = useDispatch();\r\n  const chosenIngredients = useSelector((state) => state.ingredientsData.chosenIngredients);\r\n  const ref = useRef<HTMLLIElement>(null);\r\n\r\n  const [{handlerId}, drop] = useDrop({\r\n    accept: 'chosen-ingredient',\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId(),\r\n      };\r\n    },\r\n    drop(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      \r\n      // @ts-ignore\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      const clientOffset = monitor.getClientOffset();\r\n      // @ts-ignore\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n\r\n      moveIngredient(dragIndex - 1, hoverIndex - 1);\r\n\r\n      // @ts-ignore\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const [{isDragging}, drag] = useDrag({\r\n    type: \"chosen-ingredient\",\r\n    item: () => {\r\n      return {id, index};\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n  const opacity = isDragging ? 0 : 1;\r\n\r\n  drag(drop(ref));\r\n\r\n  const handleDeleteIngredient = (item: IIngredient) => () => {\r\n    const selectedIngredientIndex = chosenIngredients.indexOf(item)\r\n    const chosenIngredientsClone = chosenIngredients.slice();\r\n    chosenIngredientsClone.splice(selectedIngredientIndex, 1);\r\n    dispatch(deleteIngredient(chosenIngredientsClone))\r\n  }\r\n\r\n\r\n  return (\r\n    <li ref={ref} style={{opacity}} data-handler-id={handlerId} className={chosenIngredientStyle.list_item}>\r\n      <DragIcon type=\"primary\"/>\r\n      <ConstructorElement\r\n        text={name}\r\n        price={price}\r\n        thumbnail={image}\r\n        handleClose={handleDeleteIngredient(ingredient)}\r\n      />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ChosenIngredient;","import {FC, useCallback, useMemo} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Button, ConstructorElement, CurrencyIcon,} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport burgerConstructorStyle from \"./burger-constructor.module.css\";\r\nimport {getOrderData} from \"../../services/actions/order\";\r\nimport {DndProvider, useDrop} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport ChosenIngredient from \"../chosen-ingredient/chosen-ingredient\";\r\nimport update from \"immutability-helper\";\r\nimport {sortIngredients} from \"../../services/actions/ingredients\";\r\nimport {changeOrderDetailsPopupState} from \"../../services/actions/popup\";\r\nimport {IBurgerConstructorProps, IIngredient, TIngredientType} from \"../../services/types/types\";\r\nimport {useDispatch, useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst BurgerConstructor: FC<IBurgerConstructorProps> = ({onDropHandler}) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const chosenIngredients = useSelector(\r\n    (state) => state.ingredientsData.chosenIngredients\r\n  );\r\n\r\n  const userData = useSelector((state) => state.userData.userData);\r\n  const accessToken = useSelector((state) => state.userData.accessToken);\r\n\r\n  const totalSum = useMemo(\r\n    () =>\r\n      chosenIngredients.reduce(\r\n        (acc: number, cur: IIngredient) =>\r\n          cur.type === \"bun\" ? acc + cur.price * 2 : acc + cur.price,\r\n        0\r\n      ),\r\n    [chosenIngredients]\r\n  );\r\n\r\n  const [{isHover}, burgerIngredientsContainer] = useDrop({\r\n    accept: \"ingredient\",\r\n    drop(ingredientId: IIngredient) {\r\n      onDropHandler(ingredientId);\r\n    },\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  const moveIngredient = useCallback(\r\n    (dragIndex, hoverIndex) => {\r\n      const ingredientWithTypeBan = chosenIngredients.filter(\r\n        ({type}: TIngredientType) => type === \"bun\"\r\n      );\r\n      const ingredientsWithoutBan = chosenIngredients.filter(\r\n        ({type}: TIngredientType) => type !== \"bun\"\r\n      );\r\n      const sortedIngredients = update(\r\n        ingredientsWithoutBan,\r\n        {\r\n          $splice: [\r\n            [dragIndex, 1],\r\n            [hoverIndex, 0, ingredientsWithoutBan[dragIndex]],\r\n          ],\r\n        },\r\n      );\r\n      const sortedInregientsWithBun = [\r\n        ...ingredientWithTypeBan,\r\n        ...sortedIngredients,\r\n      ];\r\n\r\n      dispatch(sortIngredients([...sortedInregientsWithBun]));\r\n    },\r\n    [chosenIngredients, dispatch]\r\n  );\r\n\r\n  const borderColor = isHover ? \"#5147F8\" : \"transparent\";\r\n\r\n  const handleOrderButtonClick = () => {\r\n    const ingredientsIds = chosenIngredients.map(\r\n      (ingredient: IIngredient) => ingredient._id\r\n    );\r\n\r\n    if (userData) {\r\n      dispatch(getOrderData(ingredientsIds, accessToken));\r\n      dispatch(changeOrderDetailsPopupState(true));\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  };\r\n\r\n  const bunElementHandler = (\r\n    chosenIngredients: IIngredient[],\r\n    property: string,\r\n    trueValue: string,\r\n    falseValue: string\r\n  ) => chosenIngredients.find((ingredient: IIngredient) => ingredient.type === \"bun\")\r\n    // @ts-ignore\r\n    ? `${chosenIngredients.find((ingredient: IIngredient) => ingredient.type === \"bun\")[\r\n      property\r\n      ]\r\n    } ${trueValue}`\r\n    : falseValue;\r\n\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div\r\n        ref={burgerIngredientsContainer}\r\n        style={{borderColor}}\r\n        className={`${burgerConstructorStyle.constructor_container} mt-25 pt-5 pb-5`}\r\n      >\r\n        <div className={`${burgerConstructorStyle.constructor_element} pr-5`}>\r\n          {chosenIngredients.length > 0 ? (\r\n            <ConstructorElement\r\n              type=\"top\"\r\n              isLocked={true}\r\n              text={bunElementHandler(\r\n                chosenIngredients,\r\n                \"name\",\r\n                \"(верх)\",\r\n                \"Выберите булку\"\r\n              )}\r\n              price={+bunElementHandler(chosenIngredients, \"price\", \"\", \"0\")}\r\n              thumbnail={bunElementHandler(chosenIngredients, \"image\", \"\", \"\")}\r\n            />\r\n          ) : (\r\n            <p className=\"text text_type_main-large pt-3\">Выберите булку</p>\r\n          )}\r\n        </div>\r\n        <ul className={`${burgerConstructorStyle.list} order-ingredients-list pl-4 pr-4`}>\r\n          {chosenIngredients.map(\r\n            (ingredient: IIngredient, idx: number) =>\r\n              ingredient.type !== \"bun\" && (\r\n                <ChosenIngredient\r\n                  key={ingredient.uuid}\r\n                  index={idx}\r\n                  moveIngredient={moveIngredient}\r\n                  ingredient={ingredient}\r\n                  id={`${ingredient._id}${idx}`}\r\n                />\r\n              )\r\n          )}\r\n        </ul>\r\n        <div className=\"pr-5\">\r\n          {chosenIngredients.length > 0 && (\r\n            <ConstructorElement\r\n              type=\"bottom\"\r\n              isLocked={true}\r\n              text={bunElementHandler(\r\n                chosenIngredients,\r\n                \"name\",\r\n                \"(низ)\",\r\n                \"Выберите булку\"\r\n              )}\r\n              price={+bunElementHandler(chosenIngredients, \"price\", \"\", \"0\")}\r\n              thumbnail={bunElementHandler(chosenIngredients, \"image\", \"\", \"\")}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div className={`${burgerConstructorStyle.button_container} pt-5 pr-5`}>\r\n          <div className=\"mr-10\">\r\n            <span className=\"text text_type_digits-medium mr-2\">\r\n              {totalSum}\r\n            </span>\r\n            <CurrencyIcon type=\"primary\"/>\r\n          </div>\r\n          <Button\r\n            onClick={handleOrderButtonClick}\r\n            type=\"primary\"\r\n            size=\"medium\"\r\n          >\r\n            Оформить заказ\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import BurgerIngredients from '../burger-ingredients/burger-ingredients';\r\nimport BurgerConstructor from '../burger-constructor/burger-constructor';\r\nimport mainStyles from './main.module.css';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { addIngredient } from '../../services/actions/ingredients';\r\nimport {IIngredient} from \"../../services/types/types\";\r\nimport {FC} from 'react';\r\nimport {useDispatch, useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst Main: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const chosenIngredients = useSelector((state) => state.ingredientsData.chosenIngredients);\r\n  const initialIngredients = useSelector((state) => state.ingredientsData.ingredients);\r\n\r\n  const handleDrop = (ingredientId: IIngredient) => {\r\n    const targetIngredient = initialIngredients.find((ingredient: IIngredient) => ingredient._id === ingredientId._id)\r\n    const selectedBun = chosenIngredients.find((ingredient: IIngredient) => ingredient.type === 'bun')\r\n    // @ts-ignore\r\n    const selectedBunIndex = chosenIngredients.indexOf(selectedBun)\r\n\r\n    // @ts-ignore\r\n    if (targetIngredient.type === 'bun' && selectedBun) {\r\n      const chosenIngredientsClone = chosenIngredients.slice();\r\n      // @ts-ignore\r\n      chosenIngredientsClone.splice(selectedBunIndex, 1, targetIngredient);\r\n      dispatch(addIngredient(chosenIngredientsClone));\r\n    } else {\r\n      // @ts-ignore\r\n      dispatch(addIngredient([...chosenIngredients, targetIngredient]));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <section className={mainStyles.main_container}>\r\n          <BurgerIngredients />\r\n          <BurgerConstructor onDropHandler={handleDrop} />\r\n        </section>\r\n      </DndProvider>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;","import modalOverlayStyles from './modal-overlay.module.css';\r\nimport {IModalOverlayProps} from \"../../services/types/types\";\r\nimport {FC} from 'react';\r\n\r\nconst ModalOverlay: FC<IModalOverlayProps>\r\n  = ({handlePopupClose}) => <div onClick={handlePopupClose} className={modalOverlayStyles.overlay}>\r\n</div>;\r\n\r\nexport default ModalOverlay","import {useEffect, FC} from 'react';\r\nimport modalStyles from './modal.module.css';\r\nimport {CloseIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport {createPortal} from 'react-dom';\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\nimport {IModalProps} from \"../../services/types/types\";\r\n\r\nconst Modal: FC<IModalProps> = ({handlePopupClose, children, title = ''}) => {\r\n  const modalRoot: HTMLElement = document.getElementById(\"react-modals\") as HTMLElement;\r\n\r\n  useEffect(() => {\r\n    const handleEscapeClose = (evt: { key: string; }) => {\r\n      if (evt.key === 'Escape') {\r\n        handlePopupClose()\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keyup', handleEscapeClose);\r\n    return () => {\r\n      document.removeEventListener('keyup', handleEscapeClose);\r\n    };\r\n  }, [handlePopupClose])\r\n\r\n  return createPortal(\r\n    <>\r\n      <div className={`${modalStyles.container} pt-15 pr-10 pl-10 pb-15`}>\r\n        <header className={modalStyles.header}>\r\n          {title && (<h2 className={`${modalStyles.title} text text_type_main-large`}>{title}</h2>)}\r\n          <button onClick={handlePopupClose} className={modalStyles.closeButton}>\r\n            <CloseIcon type=\"primary\"/>\r\n          </button>\r\n        </header>\r\n        {children}\r\n      </div>\r\n      <ModalOverlay handlePopupClose={handlePopupClose}/>\r\n    </>\r\n    , modalRoot\r\n  );\r\n};\r\n\r\nexport default Modal;","export default __webpack_public_path__ + \"static/media/done.cc5a59a7.gif\";","import orderDetailsStyles from './order-details.module.css';\r\nimport doneGif from '../../images/done.gif';\r\nimport {FC} from 'react';\r\nimport {useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst OrderDetails:FC = () => {\r\n  const orderData = useSelector((state) => state.orderData.orderDetails);\r\n  return (\r\n    <>\r\n      {\r\n        orderData ? (\r\n          <div className={`${orderDetailsStyles.container}`}>\r\n            <h3 className={`text text_type_digits-large pt-10 ${orderDetailsStyles.title}`}>{\r\n              // @ts-ignore\r\n              orderData.order.number\r\n            }</h3>\r\n            <p className=\"text text_type_main-medium pt-8 pb-15\">\r\n              идентификатор заказа\r\n            </p>\r\n            <img className=\"pb-15\" src={doneGif} alt=\"чекаут\" />\r\n            <p className={`text text_type_main-default pb-2 ${orderDetailsStyles.text}`}>\r\n              {\r\n                // @ts-ignore\r\n                orderData.success ? `Ваш '${orderData.name\r\n                }' начали готовить` : 'Ваш заказ в очереди на приготовление'}\r\n            </p>\r\n            {// @ts-ignore\r\n              orderData.success && (<p className=\"text text_type_main-default text_color_inactive pb-15\">\r\n              Дождитесь готовности на орбитальной станции\r\n            </p>)\r\n            }\r\n          </div>\r\n        ) : null\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;","import ingredientDetailsStyles from \"./ingredient-details.module.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {IIngredient, IIngredientDetailsProps} from \"../../services/types/types\";\r\nimport {FC} from 'react'\r\nimport {useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst IngredientDetails: FC<IIngredientDetailsProps>= ({ title }) => {\r\n  const { id } = useParams();\r\n\r\n  const ingredients = useSelector((state) => state.ingredientsData.ingredients);\r\n\r\n  const selectedIngredient = ingredients.find((ingredient: IIngredient) => ingredient._id === id)\r\n\r\n  return (\r\n    <>\r\n      {selectedIngredient && (\r\n        <div className={`${ingredientDetailsStyles.container}`}>\r\n          {title && (<h2 className={`${ingredientDetailsStyles.title} text text_type_main-large`}>{title}</h2>)}\r\n          <img\r\n            width=\"480\"\r\n            height=\"240\"\r\n            alt={selectedIngredient.name}\r\n            src={selectedIngredient && selectedIngredient.image}\r\n          />\r\n          <p className=\"text text_type_main-medium pt-4 pb-8\">\r\n            {selectedIngredient && selectedIngredient.name}\r\n          </p>\r\n          <ul className={`${ingredientDetailsStyles.list} pt-8`}>\r\n            <li\r\n              className={`${ingredientDetailsStyles.listItem} text text_type_main-default text_color_inactive`}\r\n            >\r\n              <span>Калории,ккал</span>\r\n              {selectedIngredient.calories}\r\n            </li>\r\n            <li\r\n              className={`${ingredientDetailsStyles.listItem} text text_type_main-default text_color_inactive`}\r\n            >\r\n              <span>Белки, г</span>\r\n              {selectedIngredient.proteins}\r\n            </li>\r\n            <li\r\n              className={`${ingredientDetailsStyles.listItem} text text_type_main-default text_color_inactive`}\r\n            >\r\n              <span>Жиры, г</span>\r\n              {selectedIngredient.fat}\r\n            </li>\r\n            <li\r\n              className={`${ingredientDetailsStyles.listItem} text text_type_main-default text_color_inactive`}\r\n            >\r\n              <span>Углеводы, г</span>\r\n              {selectedIngredient.carbohydrates}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientDetails;\r\n","import {FC} from 'react';\r\nimport orderListStyles from './orders-list.module.css';\r\nimport OrderComponent from \"../order-component/order-component\";\r\nimport {IOrder} from \"../../services/types/types\";\r\nimport {useSelector} from \"../../services/hooks/hooks\";\r\nimport Loader from \"../loader/loader\";\r\n\r\nconst OrderSList: FC = () => {\r\n  const orders = useSelector((state) => state.ordersData.orders);\r\n  \r\n  return (\r\n    <div className={orderListStyles.main_container}>\r\n      <h1 className=\"mt-10 mb-5 text text_type_main-large\">Лента заказов</h1>\r\n      <div\r\n        className={`${orderListStyles.orders_container} mt-10 ingredients-container`}>\r\n        {\r\n          orders.length > 0 ? (\r\n            <ul className={`${orderListStyles.list} pt-6 pb-10 pr-4 pl-4`}>\r\n              {\r\n                orders?.map((order: IOrder, idx: number) => (\r\n                  <OrderComponent key={idx} isHistory={false} order={order}/>\r\n                ))\r\n              }\r\n            </ul>\r\n          ) : (<Loader />)\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderSList;\r\n","import {FC} from 'react';\r\nimport orderInfoStyles from './orders-info.module.css';\r\nimport {IOrder} from \"../../services/types/types\";\r\nimport {useSelector} from \"../../services/hooks/hooks\";\r\nimport Loader from \"../loader/loader\";\r\n\r\nconst OrdersInfo: FC = () => {\r\n  const total = useSelector((state) => state.ordersData.total)\r\n  const totalToday = useSelector((state) => state.ordersData.totalToday)\r\n  const orders = useSelector((state) => state.ordersData.orders)\r\n\r\n  return (\r\n    <div className={orderInfoStyles.container}>\r\n      <>\r\n        {\r\n          orders.length > 0 ? (\r\n            <>\r\n              <div className={orderInfoStyles.order_numbers}>\r\n                {\r\n                  orders?.some((order: IOrder) => order.status === 'done') && (\r\n                    <div className={orderInfoStyles.ready}>\r\n                      <p className=\"text text_type_main-medium pb-6\">\r\n                        Готовы:\r\n                      </p>\r\n                      <div className={orderInfoStyles.numbers_container}>\r\n                        <ul className={orderInfoStyles.list_accent}>\r\n                          {\r\n                            orders?.map((order: IOrder, idx: number) => {\r\n                              if (idx < 10 && order.status === 'done') {\r\n                                return (<li key={idx} className=\"text text_type_digits-default pb-2\">\r\n                                  {order.number}\r\n                                </li>)\r\n                              }\r\n                              return null\r\n                            })\r\n                          }\r\n                        </ul>\r\n                        <ul className={orderInfoStyles.list_accent}>\r\n                          {\r\n                            orders?.map((order: IOrder, idx: number) => {\r\n                              if (idx >= 10 && idx < 20 && order.status === 'done') {\r\n                                return (<li key={idx} className=\"text text_type_digits-default pb-2\">\r\n                                  {order.number}\r\n                                </li>)\r\n                              }\r\n                              return null\r\n                            })\r\n                          }\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                }\r\n                {\r\n                  orders?.some((order: IOrder) => order.status === 'pending') && (\r\n                    <div className={orderInfoStyles.atWork}>\r\n                      <p className=\"text text_type_main-medium pb-6\">\r\n                        В работе:\r\n                      </p>\r\n                      <ul className={orderInfoStyles.list}>\r\n                        {\r\n                          orders?.map((order: IOrder, idx: number) => {\r\n                            if (idx < 10 && order.status === 'pending') {\r\n                              return (<li key={idx} className=\"text text_type_digits-default pb-2\">\r\n                                {order.number}\r\n                              </li>)\r\n                            }\r\n                            return null\r\n                          })\r\n                        }\r\n                      </ul>\r\n                    </div>\r\n                  )\r\n                }\r\n              </div>\r\n              <div className={orderInfoStyles.all_time}>\r\n                <p className=\"text text_type_main-medium\">\r\n                  Выполнено за все время:\r\n                </p>\r\n                <span className={`${orderInfoStyles.digits} text text_type_digits-large`}>{total}</span>\r\n              </div>\r\n              <div>\r\n                <p className=\"text text_type_main-medium\">\r\n                  Выполнено за сегодня:\r\n                </p>\r\n                <span className={`${orderInfoStyles.digits} text text_type_digits-large`}>{totalToday}</span>\r\n              </div>\r\n            </>\r\n          ) : (<Loader/>)\r\n        }\r\n\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersInfo;\r\n","import {FC, useEffect} from 'react';\r\nimport feedStyles from './feed.module.css';\r\nimport OrdersList from \"../../components/orders-list/orders-list\";\r\nimport OrdersInfo from \"../../components/orders-info/orders-info\";\r\nimport {wsAllOrdersConnectionClosed, wsAllOrdersConnectionStart} from \"../../services/actions/orders\";\r\nimport {useDispatch} from \"../../services/hooks/hooks\";\r\n\r\nconst Feed: FC = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(wsAllOrdersConnectionStart());\r\n\r\n    return () => {\r\n      dispatch(wsAllOrdersConnectionClosed())\r\n    }\r\n  }, [dispatch])\r\n  \r\n  return (\r\n    <article className={feedStyles.container}>\r\n      <OrdersList/>\r\n      <OrdersInfo/>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import {FC, useEffect} from 'react';\r\nimport OrderFullInfoStyles from './order-full-info.module.css';\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {IIngredient, IOrderFullInfoProps} from '../../services/types/types';\r\nimport {useDispatch, useSelector} from \"../../services/hooks/hooks\";\r\nimport Loader from \"../loader/loader\";\r\nimport {getOrderInfo} from \"../../services/actions/orders\";\r\n\r\nconst OrderFullInfo: FC<IOrderFullInfoProps> = ({isPopup}) => {\r\n  const dispatch = useDispatch()\r\n  const {orderNumber} = useParams();\r\n  \r\n  const orderInfo = useSelector(state => state.ordersData.orderInfo)\r\n\r\n  const allIngredients = useSelector((state) => state.ingredientsData.ingredients)\r\n\r\n  const foundIngredients = orderInfo?.ingredients.map((orderIngredient: string) => allIngredients.find((ingredient: IIngredient) => ingredient._id === orderIngredient))\r\n\r\n  const calculateSum = (): number => {\r\n    let sum = 0;\r\n    foundIngredients?.forEach((ingredient: IIngredient | undefined) => {\r\n      const orderedIngredient = allIngredients.find((orderIngredient: IIngredient) => orderIngredient?._id === ingredient?._id)\r\n      if (orderedIngredient?.price) {\r\n        sum += orderedIngredient.price\r\n      }\r\n    })\r\n    return sum\r\n  }\r\n\r\n  const checkStatus = (status: string) => {\r\n    if (status === 'pending') {\r\n      return 'Готовится'\r\n    } else {\r\n      return 'Выполнен'\r\n    }\r\n  }\r\n\r\n  const checkStyles = (status: string) => {\r\n    if (status === 'pending') {\r\n      return {\r\n        color: '#00CCCC'\r\n      }\r\n    } else {\r\n      return {}\r\n    }\r\n  }\r\n\r\n  function formatDate(str: string) {\r\n    return new Date(str).toLocaleString()\r\n  }\r\n\r\n  useEffect(() => {\r\n    orderNumber && dispatch(getOrderInfo(+orderNumber));\r\n  }, [dispatch, orderNumber])\r\n\r\n  return (\r\n    <>\r\n      {\r\n        orderInfo?.number ? (\r\n          <div className={OrderFullInfoStyles.container} style={!isPopup ? {marginTop: '120px'} : {}}>\r\n            <div className={OrderFullInfoStyles.order_info}>\r\n              <p\r\n                className={`text text_type_digits-default pb-10 ${OrderFullInfoStyles.order_number}`}>#{\r\n                orderInfo && orderInfo.number\r\n              }</p>\r\n              <h2 className=\"text text_type_main-medium pb-3\">{\r\n                orderInfo && orderInfo.name\r\n              }</h2>\r\n              <p className={`text text_type_main-default pb-15 ${OrderFullInfoStyles.order_status}`}\r\n                 style={checkStyles(orderInfo?.status)}\r\n              >{\r\n                checkStatus(orderInfo?.status)\r\n              }</p>\r\n              <p className=\"text text_type_main-medium pb-6\">Состав:</p>\r\n              <ul className={OrderFullInfoStyles.list}>\r\n                {\r\n                  Array.from(new Set(foundIngredients))?.map((ingredient: IIngredient | undefined, idx: number) => {\r\n                    return (\r\n                      <li key={idx} className={OrderFullInfoStyles.list_item}>\r\n                        <img className={OrderFullInfoStyles.image} src={ingredient?.image} alt=\"\"/>\r\n                        <h3\r\n                          className={`text text_type_main-default ${OrderFullInfoStyles.title}`}>{ingredient?.name}</h3>\r\n                        <div className={`text text_type_digits-default ${OrderFullInfoStyles.item_currency}`}>\r\n                          <span>\r\n                            {\r\n                              foundIngredients && foundIngredients?.filter(filteredIngredient => filteredIngredient?._id === ingredient?._id).length\r\n                            }\r\n                          </span>\r\n                          x\r\n                          <div className={OrderFullInfoStyles.item_currency_container}>\r\n                            <span>{ingredient?.price}</span>\r\n                            <CurrencyIcon type=\"primary\"/>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    )\r\n                  })\r\n                }\r\n              </ul>\r\n              <div className={OrderFullInfoStyles.footer}>\r\n                <p className=\"text text_type_main-default text_color_inactive\">{\r\n                  formatDate(orderInfo?.createdAt)\r\n                }</p>\r\n                <div className={OrderFullInfoStyles.currency_container}>\r\n                  <span className=\"text text_type_digits-default\">{\r\n                    calculateSum()\r\n                  }</span>\r\n                  <CurrencyIcon type=\"primary\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : <Loader/>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderFullInfo;\r\n","import modalSwitchStyles from \"./modal-switch.module.css\";\r\nimport {useLocation, Switch, Route, useHistory} from \"react-router-dom\";\r\nimport Login from \"../../pages/login/login\";\r\nimport Register from \"../../pages/register/register\";\r\nimport ForgotPassword from \"../../pages/forgot-password/forgot-password\";\r\nimport ResetPassword from \"../../pages/reset-password/reset-password\";\r\nimport Profile from \"../../pages/profile/profile\";\r\nimport NotFound from \"../../pages/not-found/not-found\";\r\nimport ProtectedRoute from \"../protected-route/protected-route\";\r\nimport {\r\n  changeOrderDetailsPopupState,\r\n  changeIngredientsPopupState, changeOrderPopupState,\r\n} from \"../../services/actions/popup\";\r\nimport {deleteSelectedIngredient} from \"../../services/actions/ingredients\";\r\nimport {deleteOrderData} from \"../../services/actions/order\";\r\nimport Main from \"../main/main\";\r\nimport Modal from \"../modal/modal\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport Loader from \"../loader/loader\";\r\nimport Feed from \"../../pages/feed/feed\";\r\nimport OrderFullInfo from \"../order-full-info/order-full-info\";\r\nimport {useDispatch, useSelector} from \"../../services/hooks/hooks\";\r\nimport {cleanOrderInfo} from \"../../services/actions/orders\";\r\n\r\nconst ModalSwitch = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const orderData = useSelector((state) => state.orderData.orderDetails);\r\n  const isOrderDetailsPopupOpen = useSelector(\r\n    (state) => state.popupState.isOrderDetailsPopupOpen\r\n  );\r\n  const location = useLocation();\r\n  const background = location.state && location.state.background;\r\n\r\n  const handleOrderDetailsPopupClose = () => {\r\n    dispatch(changeOrderDetailsPopupState(false))\r\n    dispatch(deleteOrderData())\r\n  }\r\n\r\n  const handleIngredientsDetailsPopupClose = () => {\r\n    dispatch(changeIngredientsPopupState(false));\r\n    dispatch(deleteSelectedIngredient());\r\n    background && history.goBack();\r\n  }\r\n\r\n  const handleOrderPopupClose = () => {\r\n    dispatch(changeOrderPopupState(false));\r\n    background && history.goBack();\r\n    dispatch(cleanOrderInfo())\r\n  }\r\n\r\n  return (\r\n    <div className={`${modalSwitchStyles.container} pb-10`}>\r\n      <Switch location={background || location}>\r\n        {\r\n          // @ts-ignore\r\n          <Route exact path=\"/\">\r\n            <Main/>\r\n          </Route>\r\n        }\r\n        {\r\n          <Route path=\"/login\">\r\n            <Login/>\r\n          </Route>\r\n        }\r\n        {\r\n          <Route path=\"/register\">\r\n            <Register/>\r\n          </Route>\r\n        }\r\n        {\r\n          <Route path=\"/forgot-password\">\r\n            <ForgotPassword/>\r\n          </Route>\r\n        }\r\n        {\r\n          <Route path=\"/reset-password\">\r\n            <ResetPassword/>\r\n          </Route>\r\n        }\r\n        {\r\n          <Route path=\"/ingredients/:id\">\r\n            <IngredientDetails title=\"Детали ингредиента\"/>\r\n          </Route>\r\n        }\r\n        {\r\n          <Route path=\"/feed/:orderNumber\">\r\n            <OrderFullInfo isPopup={false}/>\r\n          </Route>\r\n        }\r\n        {\r\n          <Route path=\"/profile/orders/:orderNumber\">\r\n            <OrderFullInfo isPopup={false}/>\r\n          </Route>\r\n        }\r\n        <ProtectedRoute path=\"/profile\">\r\n          <Profile/>\r\n        </ProtectedRoute>\r\n        <Route path=\"/feed\">\r\n          <Feed/>\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <NotFound/>\r\n        </Route>\r\n      </Switch>\r\n\r\n      {isOrderDetailsPopupOpen && (\r\n        <Modal handlePopupClose={handleOrderDetailsPopupClose}>\r\n          {orderData ? <OrderDetails/> : <Loader/>}\r\n        </Modal>\r\n      )}\r\n\r\n      {background && (\r\n        <Route\r\n          path=\"/ingredients/:id\"\r\n          children={\r\n            <Modal\r\n              handlePopupClose={handleIngredientsDetailsPopupClose}\r\n              title=\"Детали ингредиента\"\r\n            >\r\n              <IngredientDetails/>\r\n            </Modal>\r\n          }\r\n        />\r\n      )}\r\n\r\n      {background && (\r\n        <Route\r\n          path=\"/feed/:orderNumber\"\r\n          children={\r\n            <Modal\r\n              handlePopupClose={handleOrderPopupClose}\r\n            >\r\n              <OrderFullInfo isPopup={true}/>\r\n            </Modal>\r\n          }\r\n        />\r\n      )}\r\n\r\n      {background && (\r\n        <Route\r\n          path=\"/profile/orders/:orderNumber\"\r\n          children={\r\n            <Modal\r\n              handlePopupClose={handleOrderPopupClose}\r\n            >\r\n              <OrderFullInfo isPopup={true}/>\r\n            </Modal>\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalSwitch;\r\n\r\n\r\n","import {useEffect, FC} from 'react';\r\nimport appStyles from './app.module.css';\r\nimport Header from '../header/header';\r\nimport Loader from '../loader/loader';\r\nimport {getIngredients} from '../../services/actions/ingredients';\r\nimport ModalSwitch from '../modal-switch/modal-switch';\r\nimport {getUserData} from '../../services/actions/user';\r\nimport {useDispatch, useSelector} from \"../../services/hooks/hooks\";\r\n\r\nconst App: FC = () => {\r\n  const ingredientsRequest = useSelector((state) => state.ingredientsData.ingredientsRequest);\r\n  const dispatch = useDispatch();\r\n  const accessToken = useSelector((state) => state.userData.accessToken);\r\n\r\n  useEffect(() => {\r\n    dispatch(getIngredients());\r\n    dispatch(getUserData(accessToken));\r\n  }, [dispatch, accessToken])\r\n\r\n  return (\r\n    <div className={`${appStyles.app}`}>\r\n      {\r\n        ingredientsRequest ? (<Loader/>) :\r\n          <>\r\n            <Header/>\r\n            <ModalSwitch/>\r\n          </>\r\n      }\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default App;","import {\r\n  GET_INGREDIENTS,\r\n  GET_INGREDIENTS_FAILED,\r\n  GET_INGREDIENTS_SUCCESS,\r\n  SELECT_INGREDIENT,\r\n  ADD_INGREDIENT,\r\n  DELETE_INGREDIENT,\r\n  DELETE_SELECTED_INGREDIENT,\r\n  SORT_INGREDIENTS,\r\n  DELETE_ALL_INGREDIENTS\r\n} from '../actions/ingredients';\r\nimport {AnyAction} from 'redux';\r\nimport {IIngredientsState} from \"../types/types\";\r\n\r\nconst initialState: IIngredientsState = {\r\n  ingredients: [],\r\n  selectedIngredient: null,\r\n  chosenIngredients: [],\r\n  ingredientsRequest: false,\r\n  ingredientsFailed: false,\r\n};\r\n\r\nexport const ingredientsReducer = (state = initialState, action: AnyAction): IIngredientsState => {\r\n  switch (action.type) {\r\n    case DELETE_ALL_INGREDIENTS: {\r\n      return {\r\n        ...state,\r\n        chosenIngredients: [],\r\n      };\r\n    }\r\n    case SORT_INGREDIENTS: {\r\n      return {\r\n        ...state,\r\n        chosenIngredients: action.payload\r\n      };\r\n    }\r\n    case GET_INGREDIENTS_FAILED: {\r\n      return {\r\n        ...state,\r\n        ingredientsRequest: false,\r\n        ingredientsFailed: true,\r\n      };\r\n    }\r\n    case GET_INGREDIENTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ingredientsRequest: false,\r\n        ingredients: action.payload,\r\n      };\r\n    }\r\n    case GET_INGREDIENTS: {\r\n      return {\r\n        ...state,\r\n        ingredientsRequest: true,\r\n        ingredientsFailed: false,\r\n      };\r\n    }\r\n    case SELECT_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        selectedIngredient: action.payload\r\n      };\r\n    }\r\n    case DELETE_SELECTED_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        selectedIngredient: null\r\n      };\r\n    }\r\n    case ADD_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        chosenIngredients: action.payload\r\n      };\r\n    }\r\n    case DELETE_INGREDIENT: {\r\n      return {...state, chosenIngredients: action.payload};\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};","import {\r\n  GET_ORDER_DATA,\r\n  GET_ORDER_DATA_FAILED,\r\n  GET_ORDER_DATA_SUCCESS,\r\n  DELETE_ORDER_DATA\r\n} from '../actions/order';\r\nimport { AnyAction } from 'redux';\r\nimport {IOrderState} from \"../types/types\";\r\n\r\nconst initialState: IOrderState = {\r\n  orderDetails: null,\r\n  orderRequest: false,\r\n  orderFailed: false,\r\n};\r\n\r\nexport const orderReducer = (state = initialState, action: AnyAction): IOrderState => {\r\n\r\n  switch (action.type) {\r\n    case GET_ORDER_DATA: {\r\n      return {\r\n        ...state,\r\n        orderRequest: true,\r\n        orderFailed: false,\r\n      };\r\n    }\r\n    case GET_ORDER_DATA_FAILED: {\r\n      return {\r\n        ...state,\r\n        orderRequest: false,\r\n        orderFailed: true,\r\n      };\r\n    }\r\n    case GET_ORDER_DATA_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        orderRequest: false,\r\n        orderDetails: action.payload,\r\n      };\r\n    }\r\n    case DELETE_ORDER_DATA: {\r\n      return {\r\n        ...state,\r\n        orderDetails: null,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};","import {\r\n  CHANGE_ORDER_DETAILS_POPUP_STATE,\r\n  CHANGE_INGREDIENTS_POPUP_STATE,\r\n  CHANGE_ORDER_POPUP_STATE\r\n} from '../actions/popup';\r\nimport {AnyAction} from 'redux';\r\nimport {IPopupState} from \"../types/types\";\r\n\r\nconst initialState: IPopupState = {\r\n  isOrderDetailsPopupOpen: false,\r\n  isIngredientsPopupOpen: false,\r\n  isOrderPopupOpen: false,\r\n};\r\n\r\nexport const popupReducer = (state = initialState, action: AnyAction): IPopupState => {\r\n\r\n  switch (action.type) {\r\n    case CHANGE_ORDER_DETAILS_POPUP_STATE: {\r\n      return {\r\n        ...state,\r\n        isOrderDetailsPopupOpen: action.payload,\r\n      };\r\n    }\r\n    case CHANGE_INGREDIENTS_POPUP_STATE: {\r\n      return {\r\n        ...state,\r\n        isIngredientsPopupOpen: action.payload\r\n      };\r\n    }\r\n    case CHANGE_ORDER_POPUP_STATE: {\r\n      return {\r\n        ...state,\r\n        isOrderPopupOpen: action.payload\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};","import {\r\n  REGISTRATION,\r\n  REGISTRATION_SUCCESS,\r\n  REGISTRATION_FAILED,\r\n  LOGIN,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  FORGOT_PASSWORD,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_FAILED,\r\n  RESET_PASSWORD,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAILED,\r\n  GET_USER_DATA,\r\n  GET_USER_DATA_SUCCESS,\r\n  GET_USER_DATA_FAILED,\r\n  LOGOUT,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAILED,\r\n  REFRESH_TOKEN,\r\n  REFRESH_TOKEN_SUCCESS,\r\n  REFRESH_TOKEN_FAILED,\r\n  SEND_USER_DATA,\r\n  SEND_USER_DATA_SUCCESS,\r\n  SEND_USER_DATA_FAILED,\r\n  SET_FORGOT_PASSWORD_STATE\r\n} from '../actions/user';\r\nimport {AnyAction} from 'redux';\r\nimport {IUserState} from \"../types/types\";\r\n\r\nconst initialState: IUserState = {\r\n  registrationRequest: false,\r\n  registrationRequestFailed: false,\r\n  loginRequest: false,\r\n  loginRequestFailed: false,\r\n  forgotPasswordRequest: false,\r\n  forgotPasswordRequestFailed: false,\r\n  resetPasswordRequest: false,\r\n  resetPasswordRequestFailed: false,\r\n  getUserDataRequest: false,\r\n  getUserDataRequestFailed: false,\r\n  logoutRequest: false,\r\n  logoutRequestFailed: false,\r\n  refreshTokenRequest: false,\r\n  refreshTokenRequestFailed: false,\r\n  sendUserDataRequest: false,\r\n  sendUserDataRequestFailed: false,\r\n  isPasswordForgot: false,\r\n  accessToken: null,\r\n  userData: null\r\n};\r\n\r\nexport const userReducer = (state = initialState, action: AnyAction): IUserState => {\r\n\r\n  switch (action.type) {\r\n    case REGISTRATION: {\r\n      return {\r\n        ...state,\r\n        registrationRequest: true,\r\n        registrationRequestFailed: false,\r\n      };\r\n    }\r\n    case REGISTRATION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        registrationRequest: false,\r\n        accessToken: action.payload,\r\n      };\r\n    }\r\n    case REGISTRATION_FAILED: {\r\n      return {\r\n        ...state,\r\n        registrationRequest: false,\r\n        registrationRequestFailed: true,\r\n      };\r\n    }\r\n    case LOGIN: {\r\n      return {\r\n        ...state,\r\n        loginRequest: true,\r\n        loginRequestFailed: false,\r\n      };\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loginRequest: false,\r\n        accessToken: action.payload.accessToken,\r\n        userData: action.payload.user,\r\n      };\r\n    }\r\n    case LOGIN_FAILED: {\r\n      return {\r\n        ...state,\r\n        loginRequest: false,\r\n        loginRequestFailed: true,\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD: {\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: true,\r\n        forgotPasswordRequestFailed: false,\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: false,\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: false,\r\n        forgotPasswordRequestFailed: true,\r\n      };\r\n    }\r\n    case RESET_PASSWORD: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: true,\r\n        resetPasswordRequestFailed: false,\r\n      };\r\n    }\r\n    case RESET_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: false,\r\n      };\r\n    }\r\n    case RESET_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: false,\r\n        resetPasswordRequestFailed: true,\r\n      };\r\n    }\r\n    case GET_USER_DATA: {\r\n      return {\r\n        ...state,\r\n        getUserDataRequest: true,\r\n        getUserDataRequestFailed: false,\r\n      };\r\n    }\r\n    case GET_USER_DATA_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        getUserDataRequest: false,\r\n        userData: action.payload\r\n      };\r\n    }\r\n    case GET_USER_DATA_FAILED: {\r\n      return {\r\n        ...state,\r\n        getUserDataRequest: false,\r\n        getUserDataRequestFailed: true,\r\n      };\r\n    }\r\n    case LOGOUT: {\r\n      return {\r\n        ...state,\r\n        logoutRequest: true,\r\n        logoutRequestFailed: false,\r\n      };\r\n    }\r\n    case LOGOUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        logoutRequest: false,\r\n        userData: null,\r\n        accessToken: null,\r\n      };\r\n    }\r\n    case LOGOUT_FAILED: {\r\n      return {\r\n        ...state,\r\n        logoutRequest: false,\r\n        logoutRequestFailed: true,\r\n      };\r\n    }\r\n    case REFRESH_TOKEN: {\r\n      return {\r\n        ...state,\r\n        refreshTokenRequest: true,\r\n        refreshTokenRequestFailed: false,\r\n      };\r\n    }\r\n    case REFRESH_TOKEN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        refreshTokenRequest: false,\r\n        accessToken: action.payload,\r\n      };\r\n    }\r\n    case REFRESH_TOKEN_FAILED: {\r\n      return {\r\n        ...state,\r\n        refreshTokenRequest: false,\r\n        refreshTokenRequestFailed: true,\r\n      };\r\n    }\r\n    case SEND_USER_DATA: {\r\n      return {\r\n        ...state,\r\n        sendUserDataRequest: true,\r\n        sendUserDataRequestFailed: false,\r\n      };\r\n    }\r\n    case SEND_USER_DATA_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        sendUserDataRequest: false,\r\n        userData: action.payload,\r\n      };\r\n    }\r\n    case SEND_USER_DATA_FAILED: {\r\n      return {\r\n        ...state,\r\n        sendUserDataRequest: false,\r\n        sendUserDataRequestFailed: true,\r\n      };\r\n    }\r\n    case SET_FORGOT_PASSWORD_STATE: {\r\n      return {\r\n        ...state,\r\n        isPasswordForgot: action.payload,\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};","import {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_ALL_ORDERS,\r\n  WS_GET_USER_ORDERS,\r\n  WS_USER_ORDERS_CONNECTION_SUCCESS,\r\n  WS_USER_ORDERS_CONNECTION_ERROR,\r\n  WS_USER_ORDERS_CONNECTION_CLOSED,\r\n  GET_ORDER_INFO,\r\n  GET_ORDER_INFO_SUCCESS,\r\n  GET_ORDER_INFO_FAILED,\r\n  CLEAN_ORDER_INFO\r\n} from '../actions/orders';\r\nimport {IOrdersState} from \"../types/types\";\r\nimport {AnyAction} from \"redux\";\r\n\r\nconst initialState: IOrdersState = {\r\n  wsAllOrders: false,\r\n  wsUserOrders: false,\r\n  orders: [],\r\n  userOrders: [],\r\n  total: 0,\r\n  totalToday: 0,\r\n  orderInfoRequest: false,\r\n  orderInfoFailed: false,\r\n  orderInfo: null,\r\n};\r\n\r\nexport const ordersReducer = (state = initialState, action: AnyAction): IOrdersState => {\r\n  switch (action.type) {\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allOrdersError: undefined,\r\n        wsAllOrders: true\r\n      };\r\n\r\n    case WS_USER_ORDERS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userOrdersError: undefined,\r\n        wsUserOrders: true\r\n      };\r\n\r\n    case WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        allOrdersError: action.payload,\r\n        wsAllOrders: false\r\n      };\r\n\r\n    case WS_USER_ORDERS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        userOrdersError: action.payload,\r\n        wsUserOrders: false\r\n      };\r\n\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        allOrdersError: undefined,\r\n        wsAllOrders: false,\r\n        orders: [],\r\n        total: 0,\r\n        totalToday: 0,\r\n      };\r\n\r\n    case WS_USER_ORDERS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        userOrdersError: undefined,\r\n        wsUserOrders: false,\r\n        userOrders: [],\r\n        total: 0,\r\n        totalToday: 0,\r\n      };\r\n\r\n    case WS_GET_ALL_ORDERS:\r\n      return {\r\n        ...state,\r\n        allOrdersError: undefined,\r\n        orders: action.payload.orders,\r\n        total: action.payload.total,\r\n        totalToday: action.payload.totalToday,\r\n      };\r\n\r\n    case WS_GET_USER_ORDERS:\r\n      return {\r\n        ...state,\r\n        allOrdersError: undefined,\r\n        userOrders: action.payload.orders,\r\n      }\r\n    case GET_ORDER_INFO: \r\n      return {\r\n        ...state,\r\n        orderInfoRequest: true,\r\n        orderInfoFailed: false,\r\n      }\r\n    case GET_ORDER_INFO_SUCCESS: \r\n      return {\r\n        ...state,\r\n        orderInfoRequest: false,\r\n        orderInfo: action.payload,\r\n      }\r\n    case GET_ORDER_INFO_FAILED:\r\n      return {\r\n        ...state,\r\n        orderInfoRequest: false,\r\n        orderInfoFailed: true,\r\n      }\r\n    case CLEAN_ORDER_INFO:\r\n      return {\r\n        ...state,\r\n        orderInfoRequest: false,\r\n        orderInfoFailed: false,\r\n        orderInfo: null,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}; ","import {combineReducers} from 'redux';\r\nimport {ingredientsReducer} from './ingredients';\r\nimport {orderReducer} from './order';\r\nimport {popupReducer} from './popup';\r\nimport {userReducer} from './user';\r\nimport {ordersReducer} from \"./orders\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  ingredientsData: ingredientsReducer,\r\n  orderData: orderReducer,\r\n  popupState: popupReducer,\r\n  userData: userReducer,\r\n  ordersData: ordersReducer\r\n});","import {AppDispatch, ISocketActions, RootState} from \"../types/types\";\r\nimport type {Middleware, MiddlewareAPI} from 'redux';\r\n\r\nexport const socketMiddleware = (wsUrl: string, wsActions: ISocketActions): Middleware => {\r\n  return ((store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return next => (action) => {\r\n      const {dispatch, getState} = store;\r\n      const {type} = action;\r\n      const {wsInit, onOpen, onClose, onError, onMessage} = wsActions;\r\n      const {userData} = getState();\r\n      if (type === wsInit && userData) {\r\n        socket = new WebSocket(`${wsUrl}?token=${userData?.accessToken?.replace('Bearer ', '')}`);\r\n      }\r\n      if (type === onClose) {\r\n        socket && socket.close(1000,\t'CLOSE_NORMAL')\r\n      }\r\n      if (socket) {\r\n        socket.onopen = event => {\r\n          dispatch({type: onOpen, payload: event});\r\n        };\r\n\r\n        socket.onerror = event => {\r\n          dispatch({type: onError, payload: event});\r\n        };\r\n\r\n        socket.onmessage = event => {\r\n          const {data} = event;\r\n          const parsedData = JSON.parse(data);\r\n          const {success, ...restParsedData} = parsedData;\r\n\r\n          dispatch({type: onMessage, payload: restParsedData});\r\n        };\r\n\r\n        socket.onclose = event => {\r\n          dispatch({type: onClose, payload: event});\r\n        };\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  }) as Middleware;\r\n};","import {rootReducer} from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport {compose, createStore, applyMiddleware} from 'redux';\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_ALL_ORDERS,\r\n  WS_GET_USER_ORDERS,\r\n  WS_USER_ORDERS_CONNECTION_START,\r\n  WS_USER_ORDERS_CONNECTION_SUCCESS,\r\n  WS_USER_ORDERS_CONNECTION_ERROR, WS_USER_ORDERS_CONNECTION_CLOSED\r\n} from './actions/orders';\r\nimport {ALL_ORDERS_URL, USER_ORDERS_URL} from \"../utils/constants\";\r\nimport {socketMiddleware} from \"./middleware/socketMiddleware\";\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst wsAllOrdersActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onClose: WS_CONNECTION_CLOSED,\r\n  onError: WS_CONNECTION_ERROR,\r\n  onMessage: WS_GET_ALL_ORDERS\r\n};\r\n\r\nconst wsUserOrdersActions = {\r\n  wsInit: WS_USER_ORDERS_CONNECTION_START,\r\n  onOpen: WS_USER_ORDERS_CONNECTION_SUCCESS,\r\n  onClose: WS_USER_ORDERS_CONNECTION_CLOSED,\r\n  onError: WS_USER_ORDERS_CONNECTION_ERROR,\r\n  onMessage: WS_GET_USER_ORDERS\r\n};\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(ALL_ORDERS_URL, wsAllOrdersActions), socketMiddleware(USER_ORDERS_URL, wsUserOrdersActions)));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './services/store';\r\n\r\nReactDOM.render((\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>\r\n), document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"order-component_link__3gnrG\",\"header\":\"order-component_header__36rcD\",\"footer\":\"order-component_footer__1knDN\",\"ingredients_list\":\"order-component_ingredients_list__2wsmA\",\"ingredients_list_item\":\"order-component_ingredients_list_item__2TP8n\",\"last_ingredient\":\"order-component_last_ingredient__2_Fh8\",\"overlay\":\"order-component_overlay__2ehAU\",\"last_ingredient_image\":\"order-component_last_ingredient_image__3j1DC\",\"last_ingredient_count\":\"order-component_last_ingredient_count__3h21F\",\"ingredients_list_item_image\":\"order-component_ingredients_list_item_image__3vktR\",\"total\":\"order-component_total__35Eji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_item\":\"ingredient_list_item__27_YN\",\"list_item_disabled\":\"ingredient_list_item_disabled__3c_fU\",\"moving\":\"ingredient_moving__2oYcg\",\"hint_icons\":\"ingredient_hint_icons__Fsy02\",\"left_click_icon\":\"ingredient_left_click_icon__3VCE-\",\"right_click_icon\":\"ingredient_right_click_icon__3gHQs\",\"drag_icon\":\"ingredient_drag_icon__1ZqTJ\",\"image\":\"ingredient_image__33-D4\",\"price_info\":\"ingredient_price_info__oD7HX\",\"text\":\"ingredient_text__2rsG6\",\"link\":\"ingredient_link__2h1jH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orders-info_container__2xgvj\",\"order_numbers\":\"orders-info_order_numbers__1S1Sv\",\"all_time\":\"orders-info_all_time__3eEyj\",\"digits\":\"orders-info_digits__eG1lj\",\"list\":\"orders-info_list__13Ood\",\"list_accent\":\"orders-info_list_accent__3Bw9d\",\"numbers_container\":\"orders-info_numbers_container__TtAzu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient-details_container__3phN_\",\"list\":\"ingredient-details_list__3M1Hh\",\"listItem\":\"ingredient-details_listItem__10Akm\",\"title\":\"ingredient-details_title__XLESx\",\"header\":\"ingredient-details_header__3Axc5\",\"closeButton\":\"ingredient-details_closeButton__1bqpc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"burger-ingredients_main_container__3Baoy\",\"list\":\"burger-ingredients_list__3uRcv\",\"ingredients_container\":\"burger-ingredients_ingredients_container__2-v-q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__2w-oV\",\"form\":\"login_form__36Zc4\",\"link\":\"login_link__3sJXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"register_wrapper__nWogS\",\"form\":\"register_form__1mCU9\",\"link\":\"register_link__Lk83o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"forgot-password_wrapper__3Cb3v\",\"form\":\"forgot-password_form__2KKA9\",\"link\":\"forgot-password_link__3zXZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"reset-password_wrapper__3sMl6\",\"form\":\"reset-password_form__1PnL5\",\"link\":\"reset-password_link__A51Et\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"burger-constructor_list__1O9lC\",\"constructor_container\":\"burger-constructor_constructor_container__3uA-3\",\"button_container\":\"burger-constructor_button_container__p1UW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modal_container__6OgBd\",\"title\":\"modal_title__6pRUP\",\"header\":\"modal_header__2o5Lw\",\"closeButton\":\"modal_closeButton__isCPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"order-details_title__1Kar7\",\"text\":\"order-details_text__2iKwJ\",\"container\":\"order-details_container__j7JKe\",\"header\":\"order-details_header__24snd\",\"closeButton\":\"order-details_closeButton__SyKKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"orders-list_main_container__1mP5r\",\"orders_container\":\"orders-list_orders_container__3TnEf\",\"list\":\"orders-list_list__1Z6K_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader_container\":\"loader_loader_container__3YF2k\",\"loader\":\"loader_loader__2CMi6\",\"rotate\":\"loader_rotate__24DC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"profile-form_form__1-9QN\",\"buttons_container\":\"profile-form_buttons_container__2XYAl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"not-found_wrapper__3FaWL\",\"link\":\"not-found_link__UJKk3\"};"],"sourceRoot":""}